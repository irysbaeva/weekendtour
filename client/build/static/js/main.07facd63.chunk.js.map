{"version":3,"sources":["utils/api.js","utils/constants.js","tour-service.js","tour-service-context.js","utils/transformTour.js","redux/actions.js","components/navbar.js","pic.webp","utils/compose.js","with-tour-service.js","components/error-indicator.js","components/spinner.js","components/cards.js","components/homepage.js","components/footer.js","components/upload.js","components/add-tour-form.js","components/add-tour-review.js","components/add-tour-main.js","components/login.js","components/tour-description.js","components/schedule.js","components/edit-tour-form.js","components/signup.js","components/book-tour-form.js","components/bookings.js","components/App.js","components/error-boundry.js","redux/reducer.js","store.js","localStorage.js","index.js"],"names":["customInstance","axios","create","baseURL","headers","Accept","validateStatus","status","interceptors","request","use","conf","requestConfig","token","localStorage","getItem","Authorization","response","toast","success","data","message","console","log","error","Promise","reject","Error","tourService","getTours","get","addTour","fd","FormData","key","append","post","getTour","id","editTour","user","put","editedTourData","deleteTour","delete","_id","addUser","login","addBooking","getBookings","React","createContext","TourServiceProvider","Provider","TourServiceConsumer","Consumer","transformTour","tour","dateFormat","date","moment","locale","format","startDate","endDate","toursError","type","payload","fetchTours","dispatch","then","map","catch","err","fetchTour","fetchNewTour","fetchEditTour","setUser","fetchNewUser","setItem","fetchLogin","JSON","stringify","transformBooking","booking","title","fetchBookings","fetchNewBooking","menu","useStyles","makeStyles","link","textDecoration","color","mapDispatchToProps","logoutUser","connect","store","isLoggedin","classes","AppBar","position","Toolbar","to","className","Button","onClick","clear","size","compose","funcs","comp","reduceRight","wrapped","f","withTourService","Wrapped","props","ErrorIndicator","Spinner","theme","cardGrid","paddingTop","spacing","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","tours","loading","currentUser","ownProps","addTourToBook","history","useHistory","useEffect","a","Container","maxWidth","Grid","container","price","image","company","item","xs","sm","md","Card","CardMedia","CardContent","Typography","gutterBottom","variant","component","fontSize","companyName","toUpperCase","CardActions","push","getInfo","userId","bookTour","root","padding","backgroundImage","img","backgroundSize","header","heroButtons","marginTop","newTour","align","paragraph","justify","footer","backgroundColor","palette","background","paper","Copyright","Date","getFullYear","Footer","imageAdded","e","useState","open","setOpen","onSave","files","acceptedFiles","showPreviews","maxFileSize","onClose","titleAdded","startDateAdded","endDateAdded","descriptionAdded","priceAdded","includesAdded","companyAdded","seatsAdded","description","includes","seats","Fragment","TextField","required","name","label","value","fullWidth","onChange","target","InputLabelProps","shrink","listItem","total","fontWeight","primary","secondary","List","disablePadding","el","ListItem","ListItemText","layout","width","marginLeft","marginRight","breakpoints","up","marginBottom","stepper","buttons","justifyContent","button","steps","getStepContent","step","activeStep","setActiveStep","isNextButtonDisabled","CssBaseline","Paper","Stepper","Step","StepLabel","length","disabled","alignItems","avatar","margin","main","form","submit","isLoginButtonDisabled","email","password","changeHandler","event","Avatar","noValidate","autoComplete","preventDefault","Link","href","useParams","tourInfo","setTourInfo","redirectToEditTour","columns","field","headerName","sortable","transformTours","setTransformTours","style","rows","pageSize","onRowClick","row","appBar","editedTour","setEditedTour","isSaveButtonDisabled","redirect","newUser","setNewUser","isSignupButtonDisabled","autoFocus","notice","newBooking","setBooking","find","selectedTour","setSelectedTour","firstName","lastName","phone","isBookButtonDisabled","tourInfoGet","defaultValue","select","changedTour","onChangeTour","MenuItem","filter","bookings","App","path","exact","ErrorBoundry","state","hasError","this","setState","children","Component","initialState","reducer","action","middleware","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","applyMiddleware","thunk","persistedState","serializedState","parse","loadState","createStore","subscribe","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"wNAIMA,G,OAAiBC,IAAMC,OAAO,CAClCC,QCHyB,6BDIzBC,QAAS,CAAEC,OAAQ,oBACnBC,eAAgB,SAACC,GAAD,OAAYA,GAAU,KAAOA,EAAS,QAGxDP,EAAeQ,aAAaC,QAAQC,KAAI,SAACC,GACvC,IAAMC,EAAa,eAAQD,GACvBE,EAAQC,aAAaC,QAAQ,SASjC,OAPIF,IACFD,EAAcR,QAAd,2BACKQ,EAAcR,SADnB,IAEEY,cAAc,UAAD,OAAYH,EAAZ,QAIVD,KAGTZ,EAAeQ,aAAaS,SAASP,KACnC,SAACO,GAGC,OAFAC,IAAMC,QAAQF,EAASG,KAAKC,SAC5BC,QAAQC,IAAIN,GACLA,KAET,SAACO,GAAW,IAAD,EACgBA,EAAMP,SAAvBV,EADC,EACDA,OAAQa,EADP,EACOA,KAGhB,OAAe,MAAXb,GAMW,MAAXA,GAOW,MAAXA,GAMW,MAAXA,GAlBFW,IAAMM,MAAN,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAMC,SAEXI,QAAQC,OAAO,IAAIC,MAAJ,OAAUP,QAAV,IAAUA,OAAV,EAAUA,EAAMC,YAoBxCH,IAAMM,MAAN,OAAYJ,QAAZ,IAAYA,OAAZ,EAAYA,EAAMC,SACXI,QAAQC,OAAR,cAAsBF,EAAMP,UAAYO,EAAMP,SAASG,WAKnDpB,QE7BA4B,EA/BK,CAClBC,SAAU,kBAAM7B,EAAe8B,IAAI,UACnCC,QAAS,SAACX,GACR,IAAIY,EAAK,IAAIC,SAMb,IAAK,IAAIC,KAAOd,EACdY,EAAGG,OAAOD,EAAKd,EAAKc,IAEtB,OAAOlC,EAAeoC,KAAK,QAASJ,EARvB,CACX5B,QAAS,CACP,eAAgB,0BAQtBiC,QAAS,SAACC,GAAD,OAAQtC,EAAe8B,IAAf,gBAA4BQ,KAC7CC,SAAU,SAACD,EAAIlB,GACb,IAAIoB,EAAO1B,aAAaC,QAAQ,QAChC,OAAOf,EAAeyC,IAAf,gBAA4BH,EAA5B,SAAuC,CAC5CE,KAAMA,EACNE,eAAgBtB,KAIpBuB,WAAY,SAACL,GAAD,OACVtC,EAAe4C,OAAf,gBAA+BN,GAAM,CAAElB,KAAM,CAAEyB,IAAKP,MACtDQ,QAAS,SAAC1B,GAAD,OAAUpB,EAAeoC,KAAK,UAAWhB,IAClD2B,MAAO,SAAC3B,GAAD,OAAUpB,EAAeoC,KAAK,SAAUhB,IAC/C4B,WAAY,SAAC5B,GAAD,OAAUpB,EAAeoC,KAAK,WAAYhB,IACtD6B,YAAa,kBAAMjD,EAAe8B,IAAI,c,EC1BpCoB,IAAMC,gBAFEC,E,EAAVC,SACUC,E,EAAVC,S,oECYaC,EAdO,SAACC,GACrB,IAAMC,EAAa,SAACC,GAElB,OADAC,IAAOC,OAAO,MACPD,IAAOD,EAAM,cAAcG,OAAO,eAG3C,OAAO,2BACFL,GADL,IAEEnB,GAAImB,EAAKZ,IACTkB,UAAWL,EAAWD,EAAKM,WAC3BC,QAASN,EAAWD,EAAKO,YCWvBC,EAAa,SAACzC,GAClB,MAAO,CAAE0C,KAAM,sBAAuBC,QAAS3C,IAGpC4C,EAAa,SAACxC,EAAayC,GAAd,OAA2B,WACnDA,EARO,CAAEH,KAAM,wBASftC,EACGC,WACAyC,MAAK,YAAe,IAAZlD,EAAW,EAAXA,KACPiD,EAhBG,CAAEH,KAAM,sBAAuBC,QAgBb/C,EAAKmD,IAAIf,QAE/BgB,OAAM,SAACC,GAEN,OADAJ,EAASJ,EAAWQ,IACbhD,QAAQC,OAAO,IAAIC,MAAM8C,SAIzBC,EAAY,SAAC9C,EAAayC,GAAd,OAA2B,SAAC/B,GACnD,OAAOV,EACJS,QAAQC,GACRgC,MAAK,gBAAGlD,EAAH,EAAGA,KAAH,OAAcoC,EAAcpC,MACjCoD,OAAM,SAACC,GAEN,OADAJ,EAASJ,EAAWQ,IACbhD,QAAQC,OAAO,IAAIC,MAAM8C,SAKzBE,EAAe,SAAC/C,EAAayC,GAAd,OAA2B,SAACjD,GACtDQ,EACGG,QAAQX,GACRkD,MAAK,YAAe,IAAZlD,EAAW,EAAXA,KAEP,OADAiD,EAN0B,CAAEH,KAAM,wBAO3B9C,KAERoD,OAAM,SAACC,GACN,OAAOhD,QAAQC,OAAO,IAAIC,MAAM8C,SAIzBG,EAAgB,SAAChD,EAAayC,GAAd,OAA2B,SAAC/B,EAAIlB,GAC3DQ,EAAYW,SAASD,EAAIlB,KAOdyD,EAAU,SAACrC,GACtB,MAAO,CAAE0B,KAAM,WAAYC,QAAS3B,IAOzBsC,EAAe,SAAClD,EAAayC,GAAd,OAA2B,SAACjD,GACtD,OAAOQ,EACJkB,QAAQ1B,GACRkD,MAAK,YAAe,IAAZlD,EAAW,EAAXA,KACP,GAAqB,iBAAjBA,EAAKC,QAGP,OAFAgD,EAASQ,EAAQzD,EAAKoB,OACtB1B,aAAaiE,QAAQ,QAAS3D,EAAKP,OAC5BO,EAAKC,WAGfmD,OAAM,SAACC,GACN,OAAOhD,QAAQC,OAAO,IAAIC,MAAM8C,SAIzBO,EAAa,SAACpD,EAAayC,GAAd,OAA2B,SAACjD,GACpD,OAAOQ,EACJmB,MAAM3B,GACNkD,MAAK,YAAe,IAAZlD,EAAW,EAAXA,KACP,GAAqB,mBAAjBA,EAAKC,QAIP,OAHAgD,EAASQ,EAAQzD,EAAKoB,OACtB1B,aAAaiE,QAAQ,QAAS3D,EAAKP,OACnCC,aAAaiE,QAAQ,OAAQE,KAAKC,UAAU9D,EAAKoB,OAC1CpB,EAAKC,WAGfmD,OAAM,SAACC,GACN,OAAOhD,QAAQC,OAAO,IAAIC,MAAM8C,SAWhCU,EAAmB,SAACC,GACxB,OAAO,2BACFA,GADL,IAEE9C,GAAI8C,EAAQvC,IACZY,KAAM2B,EAAQ3B,KAAO2B,EAAQ3B,KAAK4B,MAAQ,mEAGjCC,EAAgB,SAAC1D,EAAayC,GAAd,OAA2B,WACtDzC,EACGqB,cACAqB,MAAK,YAAe,IAAZlD,EAAW,EAAXA,KACPiD,EAdG,CAAEH,KAAM,yBAA0BC,QAcb/C,EAAKmD,IAAIY,QAGlCX,OAAM,SAACC,GAEN,OADAJ,EAASJ,EAAWQ,IACbhD,QAAQC,OAAO,IAAIC,MAAM8C,SAIzBc,EAAkB,SAAC3D,EAAayC,GAAd,OAA2B,SAACjD,GACzDQ,EACGoB,WAAW5B,GACXkD,MAAK,WACJD,EA7B0B,CAAEH,KAAM,0BA+BnCM,OAAM,SAACC,GAEN,OADAnD,QAAQC,IAAIkD,GACLhD,QAAQC,OAAO,IAAIC,MAAM8C,SCxIhCe,EAAO,CACX,6CACA,sEACA,sEACA,8KACA,qEACA,iCACA,oGACA,wCAGIC,EAAYC,aAAW,iBAAO,CAClCC,KAAM,CACJC,eAAgB,OAChBC,MAAO,aAwDLC,EAAqB,CAAEC,WDJH,WACxB,MAAO,CAAE7B,KAAM,iBCKF8B,eANS,SAACC,GACvB,MAAO,CAAEC,WAAYD,EAAMC,cAKWJ,EAAzBE,EAtDA,SAAC,GAAgC,IAA9BE,EAA6B,EAA7BA,WAAYH,EAAiB,EAAjBA,WACtBI,EAAUV,IAEhB,OACE,cAACW,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,UAAWL,EAAQR,KAAhC,SACE,cAACc,EAAA,EAAD,CAAQZ,MAAM,UAAd,SAAyBL,EAAK,OAG/BU,EACC,gCACE,cAAC,IAAD,CAAMK,GAAG,YAAYC,UAAWL,EAAQR,KAAxC,SACE,cAACc,EAAA,EAAD,CAAQZ,MAAM,UAAd,SAAyBL,EAAK,OAEhC,cAAC,IAAD,CAAMe,GAAG,aAAaC,UAAWL,EAAQR,KAAzC,SACE,cAACc,EAAA,EAAD,CAAQZ,MAAM,UAAd,SAAyBL,EAAK,OAEhC,cAAC,IAAD,CACEe,GAAG,IACHG,QAAS,WACPX,IACAjF,aAAa6F,SAJjB,SAOE,cAACF,EAAA,EAAD,CAAQD,UAAWL,EAAQR,KAAME,MAAM,UAAvC,SACGL,EAAK,UAKZ,gCACE,cAAC,IAAD,CAAMe,GAAG,SAASC,UAAWL,EAAQR,KAArC,SACE,cAACc,EAAA,EAAD,CAAQZ,MAAM,UAAd,SAAyBL,EAAK,OAEhC,cAAC,IAAD,CAAMe,GAAG,gBAAgBC,UAAWL,EAAQR,KAA5C,SACE,cAACc,EAAA,EAAD,CAAQZ,MAAM,UAAd,SAAyBL,EAAK,OAEhC,cAAC,IAAD,CAAMe,GAAG,SAASC,UAAWL,EAAQR,KAArC,SACI,cAACc,EAAA,EAAD,CAAQZ,MAAM,UAAUe,KAAK,QAA7B,SAAuCpB,EAAK,kB,0BClE7C,MAA0B,iC,0GCI1BqB,GAJC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAc,SAACC,GAC7B,OAAOD,EAAME,aAAY,SAACC,EAASC,GAAV,OAAgBA,EAAED,KAAUF,KCgBxCI,GAbS,kBAAM,SAACC,GAC7B,OAAO,SAACC,GACN,OACE,cAAC/D,EAAD,UACG,SAAC1B,GACA,OAAO,cAACwF,EAAD,2BAAaC,GAAb,IACPzF,YAAaA,WCFR0F,GALQ,WAEnB,OAAO,0CCEIC,GAJC,WACd,OAAO,+CCkBH9B,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvCC,SAAU,CACRC,WAAYF,EAAMG,QAAQ,GAC1BC,cAAeJ,EAAMG,QAAQ,IAE/BE,KAAM,CACJC,OAAQ,OACRC,QAAS,OACTC,cAAe,UAEjBC,UAAW,CACTP,WAAY,UAEdQ,YAAa,CACXC,SAAU,OAoId,IAQetB,MACbM,KACAnB,aApBF,SAAyBC,GACvB,MAAO,CACLmC,MAAOnC,EAAMmC,MACbC,QAASpC,EAAMoC,QACf7G,MAAOyE,EAAMzE,MACb0E,WAAYD,EAAMC,WAClBoC,YAAarC,EAAMqC,gBAII,SAACjE,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACLwC,WAAYA,EAAWxC,EAAayC,GACpCmE,cAAe,SAAClG,GAAD,OAAQ+B,EP9DU,CAAEH,KAAM,mBAAoBC,QO8Df7B,SAInCuE,EAxID,SAACZ,GACb,IAAME,EAAUV,KACVgD,EAAUC,cAEdN,EAOEnC,EAPFmC,MACAhE,EAME6B,EANF7B,WACAiE,EAKEpC,EALFoC,QACA7G,EAIEyE,EAJFzE,MACA0E,EAGED,EAHFC,WACAoC,EAEErC,EAFFqC,YACAE,EACEvC,EADFuC,cAMF,GAJAG,qBAAU,WACRvE,MACC,CAACA,IAEAiE,EACF,OAAO,cAAC,GAAD,IAET,GAAI7G,EACF,OAAO,cAAC,GAAD,IAGT,IAQMmB,EAAU,uCAAG,WAAOL,GAAP,SAAAsG,EAAA,sEACXhH,EAAYe,WAAWL,GADZ,uBAEX8B,IAFW,2CAAH,sDAKhB,OACE,cAACyE,EAAA,EAAD,CAAWrC,UAAWL,EAAQsB,SAAUqB,SAAS,KAAjD,SACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,SACGS,EAAM7D,KACL,gBAAGc,EAAH,EAAGA,MAAOtB,EAAV,EAAUA,UAAWC,EAArB,EAAqBA,QAASiF,EAA9B,EAA8BA,MAAO3G,EAArC,EAAqCA,GAAI4G,EAAzC,EAAyCA,MAAOC,EAAhD,EAAgDA,QAAhD,OACE,cAACJ,EAAA,EAAD,CAAMK,MAAI,EAAaC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA1C,SACE,eAACC,EAAA,EAAD,CAAMhD,UAAWL,EAAQ0B,KAAzB,UACE,cAAC4B,GAAA,EAAD,CACEjD,UAAWL,EAAQ8B,UACnBiB,MAAK,gCAA2BA,GAChC7D,MAAM,gBAGR,eAACqE,EAAA,EAAD,CAAalD,UAAWL,EAAQ+B,YAAhC,UACE,cAACyB,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACGzE,IAEH,eAACsE,EAAA,EAAD,WACE,cAAC,KAAD,CAAeI,SAAS,QAAQlE,MAAM,YACrC9B,EAFH,MAEiBC,KAEjB,eAAC2F,EAAA,EAAD,WACE,cAAC,KAAD,CAAiBI,SAAS,QAAQlE,MAAM,YACvCoD,EAFH,0BAIA,eAACU,EAAA,EAAD,iFACeR,EAAQa,YAAYC,oBAGrC,cAACC,EAAA,EAAD,UACE,eAACnB,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UACE,cAACoB,EAAA,EAAD,CAAMK,MAAI,EAACE,GAAI,EAAf,SACE,cAAC7C,EAAA,EAAD,CACEG,KAAK,QACLiD,QAAQ,YACRhE,MAAM,UACNa,QAAS,YAjDf,SAACpE,GACfmG,EAAQ0B,KAAR,gBAAsB7H,IAiDA8H,CAAQ9H,IALZ,sEAYF,cAACyG,EAAA,EAAD,CAAMK,MAAI,EAACE,GAAI,EAAf,SACGpD,EACCiD,GAAWA,EAAQtG,MAAQyF,EAAY+B,OACrC,cAAC5D,EAAA,EAAD,CACEC,QAAS,WACP/D,EAAWL,IAEbsE,KAAK,QACLiD,QAAQ,YACRhE,MAAM,UANR,wDAUE,KAEJ,cAACY,EAAA,EAAD,CACEG,KAAK,QACLiD,QAAQ,YACRhE,MAAM,UACNa,QAAS,YAzEhB,SAACpE,GAChBkG,EAAclG,GAEdmG,EAAQ0B,KAAR,gBAuEwBG,CAAShI,IALb,uGAtDI+C,aCtEtBI,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvC+C,KAAM,CAEJC,QAAShD,EAAMG,QAAQ,EAAG,EAAG,GAC7B8C,gBAAgB,OAAD,OAASC,EAAT,KACfC,eAAgB,SAGlBC,OAAQ,CACN/E,MAAO,SAETgF,YAAa,CACXC,UAAWtD,EAAMG,QAAQ,IAE3BhC,KAAM,CACJC,eAAgB,OAChBC,MAAO,aA0DIG,gBANS,SAAC,GACvB,MAAO,CACLkD,MAFmC,EAAZA,SAMZlD,EAtDE,SAAC,GAAgB,EAAd+E,QAAe,IAC3B5E,EAAUV,KAEhB,OACE,gCACE,qBAAKe,UAAWL,EAAQoE,KAAxB,SACE,eAAC1B,EAAA,EAAD,CAAWC,SAAS,KAApB,UACE,cAACa,EAAA,EAAD,CACEnD,UAAWL,EAAQyE,OACnBd,UAAU,KACVD,QAAQ,KACRmB,MAAM,SACNnF,MAAM,YACN+D,cAAY,EANd,4OAUA,cAACD,EAAA,EAAD,CACEE,QAAQ,KACRmB,MAAM,SACNxE,UAAWL,EAAQyE,OACnBK,WAAS,EAJX,8HAQA,qBAAKzE,UAAWL,EAAQ0E,YAAxB,SACE,eAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAGuD,QAAQ,SAApC,UACE,cAACnC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAC,IAAD,CAAM7C,GAAG,SAASC,UAAWL,EAAQR,KAArC,SACE,cAACc,EAAA,EAAD,CAAQoD,QAAQ,YAAYhE,MAAM,UAAlC,+EAKJ,cAACkD,EAAA,EAAD,CAAMK,MAAI,cASlB,cAAC,GAAD,UCrEA3D,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvC2D,OAAQ,CACNC,gBAAiB5D,EAAM6D,QAAQC,WAAWC,MAC1Cf,QAAShD,EAAMG,QAAQ,QAI3B,SAAS6D,KACP,OACE,eAAC7B,EAAA,EAAD,CAAYE,QAAQ,QAAQhE,MAAM,gBAAgBmF,MAAM,SAAxD,gCACkB,IAAIS,MAAOC,cAD7B,IAC4C,uBAD5C,0CAOJ,IAmBeC,GAnBA,WACb,IAAMxF,EAAUV,KAEhB,OACE,8BACE,yBAAQe,UAAWL,EAAQgF,OAA3B,UACE,cAACxB,EAAA,EAAD,CAAYE,QAAQ,KAAKmB,MAAM,SAASpB,cAAY,IACpD,cAACD,EAAA,EAAD,CACEE,QAAQ,YACRmB,MAAM,SACNnF,MAAM,gBACNiE,UAAU,MAEZ,cAAC0B,GAAD,U,8ECOF1F,GAAqB,CACzB8F,WV9BwB,SAACC,GAAD,MAAQ,CAAE3H,KAAM,YAAaC,QAAS0H,KUiCjD7F,gBAVS,SAAC,GACvB,MAAO,CACL+E,QAFqC,EAAdA,WAUajF,GAAzBE,EAvCY,SAAC,GAAoB,IAAlB4F,EAAiB,EAAjBA,WAAiB,EACrBE,oBAAS,GADY,oBACtCC,EADsC,KAChCC,EADgC,KAa7C,OACE,gCACE,cAACvF,EAAA,EAAD,CAAQoD,QAAQ,YACdhE,MAAM,UAAUa,QAXH,WACjBsF,GAAQ,IASN,uFAEA,cAAC,KAAD,CACED,KAAMA,EACNE,OAXsB,SAACC,GAC3BN,EAAWM,EAAM,IACjBF,GAAQ,IAUJG,cAAe,CAAC,aAAc,YAAa,aAC3CC,cAAc,EACdC,YAAa,IACbC,QArBc,WAClBN,GAAQ,YC+INlG,GAAqB,CACzByG,WXvJwB,SAACV,GAAD,MAAQ,CAAE3H,KAAM,YAAaC,QAAS0H,IWwJ9DW,eXvJ4B,SAACX,GAAD,MAAQ,CAAE3H,KAAM,iBAAkBC,QAAS0H,IWwJvEY,aXvJ0B,SAACZ,GAAD,MAAQ,CAAE3H,KAAM,eAAgBC,QAAS0H,IWwJnEa,iBXvJ8B,SAACb,GAAD,MAAQ,CACtC3H,KAAM,kBACNC,QAAS0H,IWsJTc,WXpJwB,SAACd,GAAD,MAAQ,CAAE3H,KAAM,YAAaC,QAAS0H,IWqJ9De,cXpJ2B,SAACf,GAAD,MAAQ,CAAE3H,KAAM,eAAgBC,QAAS0H,IWqJpEgB,aXpJ0B,SAAChB,GAAD,MAAQ,CAAE3H,KAAM,cAAeC,QAAS0H,IWqJlEiB,WXnJwB,SAACjB,GAAD,MAAQ,CAAE3H,KAAM,YAAaC,QAAS0H,KWqJjD7F,gBAdS,SAAC,GACvB,MAAO,CAAC+E,QAD+B,EAAdA,WAcajF,GAAzBE,EAhJK,SAAC,GAUd,IATLuG,EASI,EATJA,WACAC,EAQI,EARJA,eACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,iBACAC,EAKI,EALJA,WACAC,EAII,EAJJA,cAEAE,GAEI,EAHJD,aAGI,EAFJC,YACA/B,EACI,EADJA,QAGA1F,EAOE0F,EAPF1F,MACAtB,EAMEgH,EANFhH,UACAC,EAKE+G,EALF/G,QACA+I,EAIEhC,EAJFgC,YACAC,EAGEjC,EAHFiC,SACA/D,EAEE8B,EAFF9B,MACAgE,EACElC,EADFkC,MAGA,OACE,eAAC,IAAMC,SAAP,WACE,cAACvD,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,2EAGA,eAACb,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UACE,cAACoB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,QACH+K,KAAK,QACLC,MAAM,6CACNC,MAAOlI,EACPmI,WAAS,EACTC,SAAU,SAAC5B,GACTU,EAAWV,EAAE6B,OAAOH,YAI1B,cAACxE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC6D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,YACH+K,KAAK,YACLC,MAAM,gEACNpJ,KAAK,OAEDqJ,MAAOxJ,EACX4J,gBAAiB,CACfC,QAAQ,GAEVH,SAAU,SAAC5B,GACTW,EAAeX,EAAE6B,OAAOH,QAE1BC,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC6D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,UACH+K,KAAK,UACLC,MAAM,kFACNpJ,KAAK,OACLqJ,MAAOvJ,EACP2J,gBAAiB,CACfC,QAAQ,GAEVJ,WAAS,EACTC,SAAU,SAAC5B,GAAD,OAAOY,EAAaZ,EAAE6B,OAAOH,YAG3C,cAACxE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACE7K,GAAG,cACH+K,KAAK,cACLC,MAAM,4EACNC,MAAOR,EACPS,WAAS,EACTC,SAAU,SAAC5B,GAAD,OAAOa,EAAiBb,EAAE6B,OAAOH,YAG/C,cAACxE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,WACH+K,KAAK,WACLC,MAAM,iHACNC,MAAOP,EACPQ,WAAS,EACTC,SAAU,SAAC5B,GAAD,OAAOe,EAAcf,EAAE6B,OAAOH,YAI5C,cAACxE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC6D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,QACH+K,KAAK,QACLC,MAAM,yDACNC,MAAOtE,EACPuE,WAAS,EACTC,SAAU,SAAC5B,GAAD,OAAOc,EAAWd,EAAE6B,OAAOH,YAIzC,cAACxE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC6D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,QACH+K,KAAK,QACLC,MAAM,wFACNC,MAAON,EACPO,WAAS,EACTC,SAAU,SAAC5B,GAAD,OAAOiB,EAAWjB,EAAE6B,OAAOH,YAGzC,cAACxE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,8BACE,cAAC,GAAD,QAIJ,cAACN,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,c,8BCtIjB5D,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvCqG,SAAU,CACRrD,QAAShD,EAAMG,QAAQ,EAAG,IAE5BmG,MAAO,CACLC,WAAY,KAEd1I,MAAO,CACLyF,UAAWtD,EAAMG,QAAQ,QAoE7B,IAMe3B,gBANS,SAAC,GACvB,MAAO,CACL+E,QAFqC,EAAdA,WAMZ/E,EAtEf,YAAqC,IAAZ+E,EAAW,EAAXA,QACjB5E,EAAUV,KAEdJ,EAQE0F,EARF1F,MACAtB,EAOEgH,EAPFhH,UACAC,EAME+G,EANF/G,QACA+I,EAKEhC,EALFgC,YACA9D,EAIE8B,EAJF9B,MACA+D,EAGEjC,EAHFiC,SAMIvJ,GAHFsH,EAFF5B,QAKW,CACX,CACE6E,QAAS,6CACTC,UAAW5I,GAEb,CACE2I,QAAS,gEACTC,UAAWlK,GAEb,CACEiK,QAAS,kFACTC,UAAWjK,GAEb,CACEgK,QAAS,mDACTC,UAAWlB,GAEb,CACEiB,QAAS,mDACTC,UAAWjB,GAEb,CACEgB,QAAS,yDACTC,UAAWhF,GAGb,CACE+E,QAAS,wFACTC,UA/BAlD,EADFkC,SAmCF,OACE,eAAC,IAAMC,SAAP,WACE,cAACvD,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,0GAIA,cAACsE,GAAA,EAAD,CAAMC,gBAAc,EAApB,SACG1K,EAAKc,KAAI,SAAC6J,GACT,OACE,cAACC,GAAA,EAAD,CAAU7H,UAAWL,EAAQ0H,SAA7B,SACE,cAACS,GAAA,EAAD,CAAcN,QAASI,EAAGJ,QAASC,UAAWG,EAAGH,aADPG,EAAGJ,oBC1DrDvI,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvC+G,OAAO,cACLC,MAAO,OACPC,WAAYjH,EAAMG,QAAQ,GAC1B+G,YAAalH,EAAMG,QAAQ,IAC1BH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClD6G,MAAO,IACPC,WAAY,OACZC,YAAa,SAGjBnD,MAAM,cACJT,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,IACtBH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClDmD,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,KAG3BmH,QAAS,CACPtE,QAAShD,EAAMG,QAAQ,EAAG,EAAG,IAE/BoH,QAAS,CACPhH,QAAS,OACTiH,eAAgB,YAElBC,OAAQ,CACNnE,UAAWtD,EAAMG,QAAQ,GACzB8G,WAAYjH,EAAMG,QAAQ,QAIxBuH,GAAQ,CAAC,mFAAmB,+FAElC,SAASC,GAAeC,GACtB,OAAQA,GACN,KAAK,EACH,OAAO,cAAC,GAAD,IACT,KAAK,EACH,OAAO,cAAC,GAAD,IACT,QACE,MAAM,IAAIzN,MAAM,iBAiFtB,IAWekF,MACbM,KACAnB,aAbsB,SAAC,GACvB,MAAO,CAAE+E,QAD2C,EAA3BA,QACPzC,YADkC,EAAlBA,gBAIT,SAACjE,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACL+C,aAAcA,EAAa/C,EAAayC,OAI7BwC,EAxFf,YAAsE,IAAnDkE,EAAkD,EAAlDA,QAASpG,EAAyC,EAAzCA,aAAc2D,EAA2B,EAA3BA,YAClCnC,GAD6D,EAAd/B,WACrCqB,MADmD,EAE/BqG,mBAAS,GAFsB,oBAE5DuD,EAF4D,KAEhDC,EAFgD,KAG7DC,GAAwBxE,EAAQ1F,QAAU0F,EAAQhH,YAAcgH,EAAQ/G,UACxE+G,EAAQgC,cAAgBhC,EAAQ9B,QAAU8B,EAAQiC,WAClDjC,EAAQkC,QAAUlC,EAAQ7B,MAWhC,OACE,eAAC,IAAMgE,SAAP,WACE,cAACsC,EAAA,EAAD,IACA,sBAAMhJ,UAAWL,EAAQoI,OAAzB,SACE,eAACkB,GAAA,EAAD,CAAOjJ,UAAWL,EAAQoF,MAA1B,UACE,cAAC5B,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAKmB,MAAM,SAA9C,gHAGA,cAAC0E,GAAA,EAAD,CAASL,WAAYA,EAAY7I,UAAWL,EAAQ2I,QAApD,SACGI,GAAM3K,KAAI,SAAC+I,GAAD,OACT,cAACqC,GAAA,EAAD,UACE,cAACC,GAAA,EAAD,UAAYtC,KADHA,QAKf,cAAC,IAAMJ,SAAP,UACGmC,IAAeH,GAAMW,OACpB,cAAC,IAAM3C,SAAP,UACE,cAACvD,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,mFAKF,eAAC,IAAMsD,SAAP,WACGiC,GAAeE,GAChB,sBAAK7I,UAAWL,EAAQ4I,QAAxB,UACkB,IAAfM,GACC,cAAC5I,EAAA,EAAD,CAAQC,QA/BP,WACjB4I,EAAcD,EAAa,IA8BkB7I,UAAWL,EAAQ8I,OAAhD,4CAIF,cAACxI,EAAA,EAAD,CACEoD,QAAQ,YACRhE,MAAM,UACNa,QAAS,WAzCzB4I,EAAcD,EAAa,GA2CLA,IAAeH,GAAMW,OAAS,GACjClL,EAAa,2BACPoG,GADM,IAET5B,QAASb,EAAY+B,WAQ3B7D,UAAWL,EAAQ8I,OAAQa,SAAUP,EAhBvC,SAkBGF,IAAeH,GAAMW,OAAS,EAAI,sEAAiB,sD,wCC/GlEpK,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvC+D,MAAO,CACLT,UAAWtD,EAAMG,QAAQ,GACzBI,QAAS,OACTC,cAAe,SACf+H,WAAY,UAEdC,OAAQ,CACNC,OAAQzI,EAAMG,QAAQ,GACtByD,gBAAiB5D,EAAM6D,QAAQ4C,UAAUiC,MAE3CC,KAAM,CACJ3B,MAAO,OACP1D,UAAWtD,EAAMG,QAAQ,IAE3ByI,OAAQ,CACNH,OAAQzI,EAAMG,QAAQ,EAAG,EAAG,QAkGjBd,MACbM,KACAnB,aAbsB,SAACC,GACvB,MAAO,CAAEC,WAAYD,EAAMC,eAGF,SAAC7B,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACLoD,WAAYA,EAAWpD,EAAayC,OAIzBwC,EA9FD,SAACZ,GACb,IAAME,EAAUV,KACVgD,EAAUC,cAFO,EAGCoD,mBAAS,IAHV,oBAGhBtJ,EAHgB,KAGVqC,EAHU,KAIfG,EAAeiB,EAAfjB,WACFqL,GAAyB7N,EAAK8N,QAAS9N,EAAK+N,SAC5CC,EAAgB,SAACC,GACrB5L,EAAQ,2BAAKrC,GAAN,mBAAaiO,EAAM/C,OAAOL,KAAOoD,EAAM/C,OAAOH,UAMvD,OACE,8BACE,eAAC1E,EAAA,EAAD,CAAWiB,UAAU,OAAOhB,SAAS,KAArC,UACE,cAAC0G,EAAA,EAAD,IACA,sBAAKhJ,UAAWL,EAAQoF,MAAxB,UACE,cAACmF,GAAA,EAAD,CAAQlK,UAAWL,EAAQ6J,OAA3B,SACE,cAAC,KAAD,MAEF,cAACrG,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAnC,4CAGA,uBAAMrD,UAAWL,EAAQgK,KAAMQ,YAAU,EAAzC,UACE,eAAC5H,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UACE,cAACoB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEtD,QAAQ,WACRuD,UAAQ,EACRI,WAAS,EACTlL,GAAG,QACHgL,MAAM,QACND,KAAK,QACLuD,aAAa,QACbnD,SAAU+C,MAGd,cAACzH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEtD,QAAQ,WACRuD,UAAQ,EACRI,WAAS,EACTH,KAAK,WACLC,MAAM,uCACNpJ,KAAK,WACL5B,GAAG,WACHsO,aAAa,mBACbnD,SAAU+C,MAGd,cAACzH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,QAEjB,cAAC5C,EAAA,EAAD,CACEvC,KAAK,SACLsJ,WAAS,EACT3D,QAAQ,YACRhE,MAAM,UACNW,UAAWL,EAAQiK,OACnBN,SAAUO,EACV3J,QAAS,SAAC+J,GACRA,EAAMI,iBACN7L,EAAWxC,GAAM8B,MAAK,WAnDlCmE,EAAQ0B,KAAR,SA0CQ,4CAgBA,cAACpB,EAAA,EAAD,CAAMC,WAAS,EAAf,SACE,cAACD,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAC0H,GAAA,EAAD,CAAMC,KAAK,UAAUlH,QAAQ,QAA7B,SACG,mIC7FbpE,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvCqG,SAAU,CACRrD,QAAShD,EAAMG,QAAQ,EAAG,IAE5BmG,MAAO,CACLC,WAAY,KAEd1I,MAAO,CACLyF,UAAWtD,EAAMG,QAAQ,IAE3BsH,OAAQ,CACNnE,UAAWtD,EAAMG,QAAQ,GACzB8G,WAAYjH,EAAMG,QAAQ,IAE5B4G,OAAO,cACLC,MAAO,OACPC,WAAYjH,EAAMG,QAAQ,GAC1B+G,YAAalH,EAAMG,QAAQ,IAC1BH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClD6G,MAAO,IACPC,WAAY,OACZC,YAAa,SAGjBnD,MAAM,cACJT,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,IACtBH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClDmD,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,SAiHdd,MACbM,KACAnB,aAbsB,SAACC,GACvB,OAAOA,KAGkB,SAAC5B,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACL8C,UAAWA,EAAU9C,EAAayC,OAIvBwC,EA5GS,SAAC,GAAgC,IAA9BnC,EAA6B,EAA7BA,UAAW4D,EAAkB,EAAlBA,YAC9BhG,EAAO0O,cAAP1O,GACA6D,EAAUV,KACVgD,EAAUC,cAHsC,EAItBoD,mBAAS,IAJa,oBAI/CmF,EAJ+C,KAIrCC,EAJqC,KAMtDvI,qBAAU,WACRjE,EAAUpC,GAAIgC,MAAK,SAAClD,GAClB8P,EAAY9P,QAEb,CAACsD,EAAWpC,IAEf,IAIE+C,EAQE4L,EARF5L,MACAtB,EAOEkN,EAPFlN,UACAC,EAMEiN,EANFjN,QACA+I,EAKEkE,EALFlE,YACAC,EAIEiE,EAJFjE,SACA/D,EAGEgI,EAHFhI,MACAE,EAEE8H,EAFF9H,QACA8D,EACEgE,EADFhE,MAGIxJ,EAAO,CACX,CACEuK,QAAS,6CACTC,UAAW5I,GAEb,CACE2I,QAAS,gEACTC,UAAWlK,GAEb,CACEiK,QAAS,kFACTC,UAAWjK,GAEb,CACEgK,QAAS,mDACTC,UAAWlB,GAEb,CACEiB,QAAS,mDACTC,UAAWjB,GAEb,CACEgB,QAAS,yDACTC,UAAU,GAAD,OAAKhF,EAAL,0CAEX,CACE+E,QAAS,qEACTC,UAAW9E,EAAUA,EAAQa,YAAc,MAE7C,CACEgE,QAAS,4EACTC,UAAWhB,IAIf,OACE,eAAC,IAAMC,SAAP,WACE,cAACsC,EAAA,EAAD,IACA,sBAAMhJ,UAAWL,EAAQoI,OAAzB,SACE,eAACkB,GAAA,EAAD,CAAOjJ,UAAWL,EAAQoF,MAA1B,UACE,cAAC5B,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,0GAIA,cAACsE,GAAA,EAAD,CAAMC,gBAAc,EAApB,SACG1K,EAAKc,KAAI,SAAC6J,GACT,OACE,cAACC,GAAA,EAAD,CAAU7H,UAAWL,EAAQ0H,SAA7B,SACE,cAACS,GAAA,EAAD,CAAcN,QAASI,EAAGJ,QAASC,UAAWG,EAAGH,aADPG,EAAGJ,cAMpD7E,GAAWA,EAAQtG,MAAQyF,EAAY+B,OACtC,cAAC5D,EAAA,EAAD,CACEoD,QAAQ,YACRhE,MAAM,UACNW,UAAWL,EAAQ8I,OACnBvI,QAAS,YAxEM,SAACpE,GAC1BmG,EAAQ0B,KAAR,UAAgB7H,EAAhB,UAwEY6O,CAAmB7O,IALvB,8DAUE,gB,SCnIR8O,GAAU,CACd,CAAEC,MAAO,QAASC,WAAY,6CAAW9C,MAAO,KAChD,CAAE6C,MAAO,YAAaC,WAAY,gEAAe9C,MAAO,KACxD,CAAE6C,MAAO,UAAWC,WAAY,kFAAkB9C,MAAO,KACzD,CACE6C,MAAO,QACPC,WAAY,2BACZpN,KAAM,SACNsK,MAAO,KAGT,CACE6C,MAAO,QACPC,WAAY,4EACZC,UAAU,EACV/C,MAAO,KAET,CACE6C,MAAO,UACPC,WAAY,qEACZC,UAAU,EACV/C,MAAO,MAqDI3H,MACbM,KACAnB,aAjBsB,SAAC,GACvB,MAAO,CACLoC,MAFmD,EAA5BA,MAGvBC,QAHmD,EAArBA,QAI9B7G,MAJmD,EAAZA,UAQhB,SAAC6C,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACLwC,WAAYA,EAAWxC,EAAayC,OAIzBwC,EAjDE,SAAC,GAA2C,IAAzCzC,EAAwC,EAAxCA,WAAYgE,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAAS7G,EAAY,EAAZA,MAAY,EACdsK,mBAAS,IADK,oBACnD0F,EADmD,KACnCC,EADmC,KAa1D,OAXA9I,qBAAU,WACRvE,IAEAqN,EACErJ,EAAM7D,KAAI,SAACd,GAAD,mBAAC,eACNA,GADK,IAER0F,QAAS1F,EAAK0F,QAAQa,oBAGzB,CAAC5F,IAEAiE,EACK,cAAC,GAAD,IAEL7G,EACK,cAAC,GAAD,IAIP,8BACE,qBAAKkQ,MAAO,CAAE5J,OAAQ,IAAK0G,MAAO,QAAlC,SACE,cAAC,KAAD,CACEmD,KAAMH,EACNJ,QAASA,GACTQ,SAAU,EACVC,WAAY,SAAChG,GAAD,OAAOvK,QAAQC,IAAIsK,EAAEiG,IAAIjP,eC9CzC4C,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvCuK,OAAQ,CACN1L,SAAU,YAEZkI,OAAO,cACLC,MAAO,OACPC,WAAYjH,EAAMG,QAAQ,GAC1B+G,YAAalH,EAAMG,QAAQ,IAC1BH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClD6G,MAAO,IACPC,WAAY,OACZC,YAAa,SAGjBnD,MAAM,cACJT,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,IACtBH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClDmD,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,KAG3BmH,QAAS,CACPtE,QAAShD,EAAMG,QAAQ,EAAG,EAAG,IAE/BoH,QAAS,CACPhH,QAAS,OACTiH,eAAgB,YAElBC,OAAQ,CACNnE,UAAWtD,EAAMG,QAAQ,GACzB8G,WAAYjH,EAAMG,QAAQ,QA6Mfd,MACbM,KACAnB,aAfsB,SAACC,GACvB,OAAOA,KAGkB,SAAC5B,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACLgD,cAAeA,EAAchD,GAC7B8C,UAAWA,EAAU9C,EAAayC,GAClCD,WAAYA,EAAWxC,EAAayC,OAIzBwC,EAzMM,SAAC,GAAkC,IAAhCjC,EAA+B,EAA/BA,cAAeF,EAAgB,EAAhBA,UAC/ByB,EAAUV,KACRnD,EAAO0O,cAAP1O,GACFmG,EAAUC,cAHqC,EAIjBoD,mBAAS,IAJQ,oBAI9CkG,EAJ8C,KAIlCC,EAJkC,KAMpD5M,EAOE2M,EAPF3M,MACAtB,EAMEiO,EANFjO,UACAC,EAKEgO,EALFhO,QACA+I,EAIEiF,EAJFjF,YACAC,EAGEgF,EAHFhF,SACA/D,EAEE+I,EAFF/I,MACAgE,EACE+E,EADF/E,MAEIiF,GACH7M,IACAtB,IACAC,IACA+I,IACA9D,IACA+D,IACAC,EAEFtE,qBAAU,WACRjE,EAAUpC,GACPgC,MACC,YASO,IARLe,EAQI,EARJA,MACAtB,EAOI,EAPJA,UACAC,EAMI,EANJA,QACA+I,EAKI,EALJA,YACAC,EAII,EAJJA,SACA/D,EAGI,EAHJA,MACAgE,EAEI,EAFJA,MACA9D,EACI,EADJA,QAEA8I,EAAc,CACZ5M,MAAOA,EACPtB,UAAWH,IAAOG,EAAW,cAAcD,OAAO,cAClDE,QAASJ,IAAOI,EAAS,cAAcF,OAAO,cAC9CiJ,YAAaA,EACbC,SAAUA,EACV/D,MAAOA,EACPgE,MAAOA,EACP9D,QAASA,EAAQtG,SAItB2B,OAAM,SAACC,GACP0N,EAAS7P,QAEX,CAACoC,EAAWpC,IAGf,IAAMkO,EAAgB,SAAC3E,GACrBoG,EAAc,2BAAKD,GAAN,mBAAmBnG,EAAE6B,OAAOL,KAAOxB,EAAE6B,OAAOH,UAGrD4E,EAAW,SAAC7P,GAChBmG,EAAQ0B,KAAR,iBAAuB7H,KAGzB,OACE,eAAC,IAAM4K,SAAP,WACE,cAACsC,EAAA,EAAD,IACA,sBAAMhJ,UAAWL,EAAQoI,OAAzB,SACE,eAACkB,GAAA,EAAD,CAAOjJ,UAAWL,EAAQoF,MAA1B,UACE,cAAC5B,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,iIAGA,eAACb,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UACE,cAACoB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,QACH+K,KAAK,QACLC,MAAM,6CACNG,SAAU+C,EACV7C,gBAAiB,CACfC,QAAQ,GAEVL,MAAOlI,EACPmI,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC6D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,YACH+K,KAAK,YACLnJ,KAAK,OACLoJ,MAAM,gEACNG,SAAU+C,EACV7C,gBAAiB,CACfC,QAAQ,GAEVL,MAAOxJ,MAGX,cAACgF,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC6D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,UACH+K,KAAK,UACLnJ,KAAK,OACLoJ,MAAM,kFACNG,SAAU+C,EACV7C,gBAAiB,CACfC,QAAQ,GAEVL,MAAOvJ,MAGX,cAAC+E,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,WACH+K,KAAK,WACLC,MAAM,iHACNG,SAAU+C,EACV7C,gBAAiB,CACfC,QAAQ,GAEVL,MAAOP,EACPQ,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,cACH+K,KAAK,cACLC,MAAM,mDACNG,SAAU+C,EACV7C,gBAAiB,CACfC,QAAQ,GAEVL,MAAOR,EACPS,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,QACH+K,KAAK,QACLC,MAAM,2BACNG,SAAU+C,EACV7C,gBAAiB,CACfC,QAAQ,GAEVL,MAAOtE,EACPuE,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAG,QACH+K,KAAK,QACLC,MAAM,4EACNG,SAAU+C,EACV7C,gBAAiB,CACfC,QAAQ,GAEVL,MAAON,EACPO,WAAS,MAGb,cAAC/G,EAAA,EAAD,CACEoD,QAAQ,YACRhE,MAAM,UACNa,QAAS,WACP9B,EAActC,EAAI0P,GAClBG,EAAS7P,IAEXkE,UAAWL,EAAQ8I,OACnBa,SAAUoC,EARZ,kFC9MNzM,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvC+D,MAAO,CACLT,UAAWtD,EAAMG,QAAQ,GACzBI,QAAS,OACTC,cAAe,SACf+H,WAAY,UAEdC,OAAQ,CACNC,OAAQzI,EAAMG,QAAQ,GACtByD,gBAAiB5D,EAAM6D,QAAQ4C,UAAUiC,MAE3CC,KAAM,CACJ3B,MAAO,OACP1D,UAAWtD,EAAMG,QAAQ,IAE3ByI,OAAQ,CACNH,OAAQzI,EAAMG,QAAQ,EAAG,EAAG,QAkHjBd,MACbM,KACAnB,aAbsB,SAACC,GACvB,MAAO,CAAEC,WAAYD,EAAMC,eAGF,SAAC7B,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACLkD,aAAcA,EAAalD,EAAayC,OAI7BwC,EA9GA,SAACZ,GACd,IAAME,EAAUV,KACVgD,EAAUC,cAFQ,EAGMoD,mBAAS,IAHf,oBAGjBsG,EAHiB,KAGRC,EAHQ,KAKhBnM,EAA6BD,EAA7BC,WAAYpB,EAAiBmB,EAAjBnB,aACdwN,GAA0BF,EAAQ9B,QAAU8B,EAAQ7B,WAAa6B,EAAQpI,YACzEwG,EAAgB,SAACC,GACrB4B,EAAW,2BAAKD,GAAN,mBAAgB3B,EAAM/C,OAAOL,KAAOoD,EAAM/C,OAAOH,UAM7D,OACE,gCACGrH,QAJHuC,EAAQ0B,KAAR,KAME,eAACtB,EAAA,EAAD,CAAWiB,UAAU,OAAOhB,SAAS,KAArC,UACE,cAAC0G,EAAA,EAAD,IACA,sBAAKhJ,UAAWL,EAAQoF,MAAxB,UACE,cAACmF,GAAA,EAAD,CAAQlK,UAAWL,EAAQ6J,OAA3B,SACE,cAAC,KAAD,MAEF,cAACrG,EAAA,EAAD,CAAYG,UAAU,KAAKD,QAAQ,KAAnC,0HAIA,uBAAMrD,UAAWL,EAAQgK,KAAMQ,YAAU,EAAzC,UACE,eAAC5H,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UACE,cAACoB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEE,KAAK,cACLxD,QAAQ,WACRuD,UAAQ,EACRI,WAAS,EACTlL,GAAG,cACHgL,MAAM,oGACNiF,WAAS,EACT9E,SAAU+C,MAGd,cAACzH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEtD,QAAQ,WACRuD,UAAQ,EACRI,WAAS,EACTlL,GAAG,QACHgL,MAAM,QACND,KAAK,QACLuD,aAAa,QACbnD,SAAU+C,MAGd,cAACzH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEtD,QAAQ,WACRuD,UAAQ,EACRI,WAAS,EACTH,KAAK,WACLC,MAAM,uCACNpJ,KAAK,WACL5B,GAAG,WACHsO,aAAa,mBACbnD,SAAU+C,MAGd,cAACzH,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,QAEjB,cAAC5C,EAAA,EAAD,CACEvC,KAAK,SACLsJ,WAAS,EACT3D,QAAQ,YACRhE,MAAM,UACNW,UAAWL,EAAQiK,OACnBN,SAAUwC,EACV5L,QAAS,SAACmF,GACRA,EAAEgF,iBACF/L,EAAasN,GAAS5N,OAAM,SAACC,GAC3BnD,QAAQC,IAAIkD,OAVlB,0HAgBA,cAACsE,EAAA,EAAD,CAAMC,WAAS,EAACkC,QAAQ,WAAxB,SACE,cAACnC,EAAA,EAAD,CAAMK,MAAI,EAAV,SACE,cAAC0H,GAAA,EAAD,CAAMC,KAAK,SAASlH,QAAQ,QAA5B,oL,SCvGVpE,GAAYC,aAAW,SAAC8B,GAAD,MAAY,CACvCuK,OAAQ,CACN1L,SAAU,YAEZkI,OAAO,cACLC,MAAO,OACPC,WAAYjH,EAAMG,QAAQ,GAC1B+G,YAAalH,EAAMG,QAAQ,IAC1BH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClD6G,MAAO,IACPC,WAAY,OACZC,YAAa,SAGjBnD,MAAM,cACJT,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,IACtBH,EAAMmH,YAAYC,GAAG,IAAyB,EAAnBpH,EAAMG,QAAQ,IAAU,CAClDmD,UAAWtD,EAAMG,QAAQ,GACzBkH,aAAcrH,EAAMG,QAAQ,GAC5B6C,QAAShD,EAAMG,QAAQ,KAG3BmH,QAAS,CACPtE,QAAShD,EAAMG,QAAQ,EAAG,EAAG,IAE/BoH,QAAS,CACPhH,QAAS,OACTiH,eAAgB,YAElBC,OAAQ,CACNnE,UAAWtD,EAAMG,QAAQ,GACzB8G,WAAYjH,EAAMG,QAAQ,IAE5BsJ,SAAU,CACRlH,SAAU,OACVS,QAAShD,EAAMG,QAAQ,IAEzB6K,OAAQ,CACNzI,SAAU,OACVe,UAAWtD,EAAMG,QAAQ,GACzB8G,WAAYjH,EAAMG,QAAQ,QAiNfd,MACbM,KACAnB,aAbsB,SAACC,GACvB,OAAOA,KAGkB,SAAC5B,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACL2D,gBAAiBA,EAAgB3D,EAAayC,OAInCwC,EA7MM,SAACZ,GACpB,IAAME,EAAUV,KACVgD,EAAUC,cACRnD,EAAuCU,EAAvCV,gBAAiBkN,EAAsBxM,EAAtBwM,WAAYrK,EAAUnC,EAAVmC,MAHP,EAKA0D,mBAAS,CAAErI,KAAMgP,EAAWhP,OAL5B,oBAKvB2B,EALuB,KAKdsN,EALc,KAMxBjP,EAAO2E,EAAMuK,MAAK,SAAClP,GAAD,OAAUA,EAAKnB,KAAOmQ,EAAWhP,QAN3B,EAOUqI,mBAASrI,GAPnB,oBAOvBmP,EAPuB,KAOTC,EAPS,KAQtBC,EAA6C1N,EAA7C0N,UAAWC,EAAkC3N,EAAlC2N,SAAU9F,EAAwB7H,EAAxB6H,MAAO+F,EAAiB5N,EAAjB4N,MAAO1C,EAAUlL,EAAVkL,MACrC2C,GACHH,IAAcC,IAAa9F,IAAU+F,IAAU1C,EAQ5CE,EAAgB,SAACC,GACrBiC,EAAW,2BAAKtN,GAAN,mBAAgBqL,EAAM/C,OAAOL,KAAOoD,EAAM/C,OAAOH,UAGzD0D,EAAW,GAuCf,OACE,eAAC,IAAM/D,SAAP,WACE,cAACsC,EAAA,EAAD,IACA,sBAAMhJ,UAAWL,EAAQoI,OAAzB,SACE,eAACkB,GAAA,EAAD,CAAOjJ,UAAWL,EAAQoF,MAA1B,UACE,cAAC5B,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,6IAGCgJ,GA9CW,WAClB,GAAIA,EAAc,CAAC,IAEfvN,EAOEuN,EAPFvN,MACAtB,EAME6O,EANF7O,UACAC,EAKE4O,EALF5O,QACAgJ,EAIE4F,EAJF5F,SACA/D,EAGE2J,EAHF3J,MACAE,EAEEyJ,EAFFzJ,QACA8D,EACE2F,EADF3F,MAEF,OAAQgE,EAAW,CACjB,CACEjD,QAAS,6CACTC,UAAW5I,GAEb,CACE2I,QAAS,sEACTC,UAAU,GAAD,OAAKlK,EAAL,cAAoBC,IAG/B,CACEgK,QAAS,mDACTC,UAAWjB,GAEb,CACEgB,QAAS,yDACTC,UAAU,GAAD,OAAKhF,EAAL,6CAEX,CACE+E,QAAS,qEACTC,UAAW9E,EAAUA,EAAQa,YAAc,MAE7C,CAAEgE,QAAS,4EAAiBC,UAAWhB,KAapBiG,GACf,cAAChF,GAAA,EAAD,CAAM1H,UAAWL,EAAQ8K,SAAU9C,gBAAc,EAAjD,SACG8C,EAAS1M,KAAI,SAAC6J,GACb,OACE,cAACC,GAAA,EAAD,CACE7H,UAAWL,EAAQ8K,SADrB,SAIE,cAAC3C,GAAA,EAAD,CACEN,QAASI,EAAGJ,QACZC,UAAWG,EAAGH,aANlB,UAEUG,EAAGJ,SAFb,OAEuBI,EAAGH,iBAWhC,wBAGF,cAACtE,EAAA,EAAD,CAAYE,QAAQ,KAAKD,cAAY,EAArC,uFAIA,eAACb,EAAA,EAAD,CAAMC,WAAS,EAACrB,QAAS,EAAzB,UACE,cAACoB,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACE7K,GAAG,SACHgL,MAAOsF,EAAe,sEAAiB,gEACvCO,aAAa,GACbC,QAAM,EACN/F,KAAK,OACLG,WAAS,EACTC,SAAU,SAAC5B,GAAD,OA1FH,SAAC4E,GACpB,IAAM4C,EAAcjL,EAAMuK,MAAK,SAAClP,GAAD,OAAUA,EAAK4B,QAAUoL,EAAM/C,OAAOH,SACrEmF,EAAW,2BAAKtN,GAAN,mBAAgBqL,EAAM/C,OAAOL,KAAOgG,EAAY/Q,MAC1DuQ,EAAgBQ,GAuFaC,CAAazH,IAPhC,SASGzD,EAAM7D,KAAI,SAACd,GAAD,OACT,cAAC8P,GAAA,EAAD,CAAwChG,MAAO9J,EAAK4B,MAApD,SACG5B,EAAK4B,OADR,kBAA0B5B,EAAK4B,eAOrC,cAAC0D,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAI,YACJ+K,KAAM,YACNC,MAAO,qBACPG,SAAU+C,EACVhD,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAI,WACJ+K,KAAM,WACNC,MAAO,6CACPG,SAAU+C,EACVhD,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAI,QACJ+K,KAAM,QACNC,MAAO,QACPG,SAAU+C,EACVhD,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EACR9K,GAAI,QACJ+K,KAAM,QACNC,MAAO,6CACPG,SAAU+C,EACVhD,WAAS,MAGb,cAACzE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAf,SACE,cAAC8D,GAAA,EAAD,CACEC,UAAQ,EAERC,KAAM,QACN/K,GAAG,SACHgL,MAAO,mIACP6F,aAAa,GACbC,QAAM,EACN5F,WAAS,EACTC,SAAU+C,EATZ,SAWG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACpBgD,QAAO,SAACpF,GAAD,OAAQA,GAAMwE,EAAa3F,SAClC1I,KAAI,SAAC6J,GAAD,OACH,cAACmF,GAAA,EAAD,CAA6BhG,MAAOa,EAApC,SACGA,GADH,eAAuBA,WAM/B,cAAC3H,EAAA,EAAD,CACEoD,QAAQ,YACRhE,MAAM,UACNiK,SAAUmD,EACVvM,QAAS,WACPnB,EAAgBH,GAChBqD,EAAQ0B,KAAK,MAEf3D,UAAWL,EAAQ8I,OARrB,+FAcA,cAACtF,EAAA,EAAD,CAAYnD,UAAWL,EAAQqM,OAA/B,2rBCpPNpB,GAAU,CACd,CAAEC,MAAO,YAAaC,WAAY,qBAAO9C,MAAO,KAChD,CAAE6C,MAAO,WAAYC,WAAY,6CAAW9C,MAAO,KACnD,CAAE6C,MAAO,OAAQC,WAAY,qBAAO9C,MAAO,KAC3C,CAAE6C,MAAO,QAASC,WAAY,wFAAmBpN,KAAM,SAAUsK,MAAO,KACxE,CAAE6C,MAAO,QAASC,WAAY,QAASC,UAAU,EAAO/C,MAAO,KAC/D,CAAE6C,MAAO,QAASC,WAAY,6CAAWC,UAAU,EAAO/C,MAAO,MAqCpD3H,MACbM,KACAnB,aAjBsB,SAAC,GACvB,MAAO,CACLyN,SAFsD,EAA/BA,SAGvBpL,QAHsD,EAArBA,QAIjC7G,MAJsD,EAAZA,UAQnB,SAAC6C,EAAUkE,GAAc,IAC1C3G,EAAgB2G,EAAhB3G,YACR,MAAO,CACL0D,cAAeA,EAAc1D,EAAayC,OAI/BwC,EAlCE,SAAC,GAAiD,IAA/CvB,EAA8C,EAA9CA,cAAemO,EAA+B,EAA/BA,SAAUpL,EAAqB,EAArBA,QAAS7G,EAAY,EAAZA,MAKpD,OAJAmH,qBAAU,WACRrD,MACC,CAACA,IAEA+C,EACK,cAAC,GAAD,IAEL7G,EACK,cAAC,GAAD,IAIP,qBAAKkQ,MAAO,CAAE5J,OAAQ,IAAK0G,MAAO,QAAlC,SACE,cAAC,KAAD,CAAUmD,KAAM8B,EAAUrC,QAASA,GAASQ,SAAU,UClB7C,SAAS8B,KACtB,OACE,eAAC,IAAMxG,SAAP,WACE,cAACsC,EAAA,EAAD,IACA,cAAC,EAAD,IACA,+BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmE,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAK,EAA1B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,aAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAaC,OAAK,EAA9B,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,kBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,UAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,gBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,YAAZ,SACE,cAAC,GAAD,WAIN,cAAC,GAAD,O,wCChDeE,G,+MACnBC,MAAQ,CACNC,UAAU,G,mEAIVC,KAAKC,SAAS,CAAEF,UAAU,M,+BAI1B,OAAIC,KAAKF,MAAMC,SACN,cAAC,GAAD,IAGFC,KAAK3M,MAAM6M,a,GAdoBhR,IAAMiR,W,SCH5CC,GAAe,CACjBhM,MAAO,GACPC,SAAS,EACT7G,MAAO,KACP0E,YAAY,EACZoC,YAAa,KACbyC,QAAS,CACPzI,GAAI,KACJ+C,MAAO,KACPtB,UAAW,KACXC,QAAS,KACT+I,YAAa,KACb9D,MAAO,KACP+D,SAAU,KACV7D,QAAS,KACTD,MAAO,KACP+D,MAAO,MAETwF,WAAY,CACVhP,KAAM,MAERgQ,SAAU,IAqHGY,GAlHC,WAAmC,IAAlCP,EAAiC,uDAAzBM,GAAcE,EAAW,uCAChD,OAAQA,EAAOpQ,MACb,IAAK,sBACH,OAAO,2BACF4P,GADL,IAEE1L,MAAO,GACPC,SAAS,EACT7G,MAAO,OAGX,IAAK,sBACH,OAAO,2BACFsS,GADL,IAEE1L,MAAOkM,EAAOnQ,QACdkE,SAAS,EACT7G,MAAO,OAGX,IAAK,sBACH,OAAO,2BACFsS,GADL,IAEE1L,MAAO,GACPC,SAAS,EACT7G,MAAO8S,EAAOnQ,UAElB,IAAK,YACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsB1F,MAAOiP,EAAOnQ,YAG/C,IAAK,iBACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsBhH,UAAWuQ,EAAOnQ,YAEnD,IAAK,eACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsB/G,QAASsQ,EAAOnQ,YAEjD,IAAK,kBACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsBgC,YAAauH,EAAOnQ,YAErD,IAAK,YACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsB9B,MAAOqL,EAAOnQ,YAE/C,IAAK,eACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsBiC,SAAUsH,EAAOnQ,YAElD,IAAK,cACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsB5B,QAASmL,EAAOnQ,YAEjD,IAAK,YACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsB7B,MAAOoL,EAAOnQ,YAE/C,IAAK,YACH,OAAO,2BACF2P,GADL,IAEE/I,QAAQ,2BAAM+I,EAAM/I,SAAb,IAAsBkC,MAAOqH,EAAOnQ,YAG/C,IAAK,WACH,OAAO,2BACF2P,GADL,IAEE5N,YAAY,EACZoC,YAAagM,EAAOnQ,UAGxB,IAAK,cACH,OAAO,2BACF2P,GADL,IAEE5N,YAAY,EACZoC,YAAa,GACbyC,QAAS,KAEb,IAAK,mBACH,OAAO,2BACF+I,GADL,IAEErB,WAAW,2BAAMqB,EAAMrB,YAAb,IAAyBhP,KAAM6Q,EAAOnQ,YAEpD,IAAK,qBACH,OAAO,2BACF2P,GADL,IAEErB,WAAY,KAEhB,IAAK,sBACH,OAAO,2BACFqB,GADL,IAEE/I,QAAS,KAGb,IAAK,yBACH,OAAO,2BACF+I,GADL,IAEEL,SAAUa,EAAOnQ,QACjBkE,SAAS,EACT7G,MAAO,OAEX,QACE,OAAOsS,I,UChIPS,IADkBC,OAAOC,sCAAwC5N,MACpC6N,aAAgBC,OAC7CC,GCPmB,WACvB,IACE,IAAMC,EAAkB/T,aAAaC,QAAQ,SAC7C,GAAwB,OAApB8T,EACF,OAEF,OAAO5P,KAAK6P,MAAMD,GAClB,MAAOpQ,GACP,QDDmBsQ,GACjB9O,GAAQ+O,aAAYX,GAASO,GAAgBL,IAEnDtO,GAAMgP,WAAU,YCES,SAACnB,GACxB,IACEhT,aAAaiE,QAAQ,QAASE,KAAKC,UAAL,eAAmB4O,KACjD,MAAOjI,GACPvK,QAAQC,IAAI,QAASsK,IDLvBqJ,CAAUjP,GAAMkP,eAGHlP,UEHfmP,IAASC,OAEP,cAAC,IAAD,CAAUpP,MAAOA,GAAjB,SACE,cAAC,GAAD,UACE,cAAC7C,EAAD,CAAqBmK,MAAO3L,EAA5B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,IACA,cAAC8R,GAAD,aAMR4B,SAASC,eAAe,W","file":"static/js/main.07facd63.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { options } from \"../utils/constants\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst customInstance = axios.create({\n  baseURL: options[process.env.NODE_ENV].baseURL,\n  headers: { Accept: \"application/json\" },\n  validateStatus: (status) => status >= 200 && status < 300,\n});\n\ncustomInstance.interceptors.request.use((conf) => {\n  const requestConfig = { ...conf };\n  let token = localStorage.getItem(\"token\");\n\n  if (token) {\n    requestConfig.headers = {\n      ...requestConfig.headers,\n      Authorization: `Bearer ${token} `,\n    };\n  }\n\n  return requestConfig;\n});\n\ncustomInstance.interceptors.response.use(\n  (response) => {\n    toast.success(response.data.message)\n    console.log(response);\n    return response;\n  },\n  (error) => {\n    const { status, data } = error.response;\n    // console.log(error.response);\n\n    if (status === 401) {\n      toast.error(data?.message);\n      // window.location.pathname = '/'\n      return Promise.reject(new Error(data?.message));\n    }\n\n    if (status === 409) {\n      toast.error(data?.message);\n      // console.log(data?.message);\n\n      return Promise.reject(new Error(data?.message));\n    }\n\n    if (status === 500) {\n   \n        toast.error(data?.message);\n        return Promise.reject(new Error(data?.message));\n  \n    }\n    if (status === 501) {\n      toast.error(data?.message);\n      return Promise.reject(new Error(data?.message));}\n  \n    toast.error(data?.message);\n    return Promise.reject(`test${error.response && error.response.data}`);\n  }\n);\n  \n\nexport default customInstance;\n","const options = {\n    development: { baseURL: \"http://localhost:5000/\"},\n    production: { baseURL: \"http://localhost:5000/prod\" },\n};\nexport {options};","import customInstance from \"./utils/api\";\n\n// console.log(process.env.NODE_ENV);\nconst tourService = {\n  getTours: () => customInstance.get(\"tours\"),\n  addTour: (data) => {\n    let fd = new FormData();\n    let config = {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    for (let key in data) {\n      fd.append(key, data[key]);\n    }\n    return customInstance.post(\"tours\", fd, config);\n  },\n  getTour: (id) => customInstance.get(`tours/${id}`),\n  editTour: (id, data) => {\n    let user = localStorage.getItem(\"user\");\n    return customInstance.put(`tours/${id}/edit`, {\n      user: user,\n      editedTourData: data,\n    });\n  },\n\n  deleteTour: (id) =>\n    customInstance.delete(`tours/${id}`, { data: { _id: id } }),\n  addUser: (data) => customInstance.post(\"/signup\", data),\n  login: (data) => customInstance.post(\"/login\", data),\n  addBooking: (data) => customInstance.post(\"bookings\", data),\n  getBookings: () => customInstance.get(\"bookings\"),\n};\n\nexport default tourService;\n","import React from \"react\";\n\nconst {\n  Provider: TourServiceProvider,\n  Consumer: TourServiceConsumer,\n} = React.createContext();\n\nexport { TourServiceProvider, TourServiceConsumer };\n","import moment from \"moment\";\n\nconst transformTour = (tour) => {\n  const dateFormat = (date) => {\n    moment.locale(\"ru\");\n    return moment(date, \"YYYY-MM-DD\").format(\"DD.MM.YYYY\");\n  };\n\n  return {\n    ...tour,\n    id: tour._id,\n    startDate: dateFormat(tour.startDate),\n    endDate: dateFormat(tour.endDate),\n    // company: tour.company.companyName,\n  };\n};\nexport default transformTour;\n","import transformTour from \"../utils/transformTour\";\n\nexport const titleAdded = (e) => ({ type: \"ADD_TITLE\", payload: e });\nexport const startDateAdded = (e) => ({ type: \"ADD_START_DATE\", payload: e });\nexport const endDateAdded = (e) => ({ type: \"ADD_END_DATE\", payload: e });\nexport const descriptionAdded = (e) => ({\n  type: \"ADD_DESCRIPTION\",\n  payload: e,\n});\nexport const priceAdded = (e) => ({ type: \"ADD_PRICE\", payload: e });\nexport const includesAdded = (e) => ({ type: \"ADD_INCLUDES\", payload: e });\nexport const companyAdded = (e) => ({ type: \"ADD_COMPANY\", payload: e });\nexport const imageAdded = (e) => ({ type: \"ADD_IMAGE\", payload: e });\nexport const seatsAdded = (e) => ({ type: \"ADD_SEATS\", payload: e });\n\nconst toursLoaded = (tours) => {\n  return { type: \"FETCH_TOURS_SUCCESS\", payload: tours };\n};\n\nconst toursRequested = () => {\n  return { type: \"FETCH_TOURS_REQUEST\" };\n};\n\nconst toursError = (error) => {\n  return { type: \"FETCH_TOURS_FAILURE\", payload: error };\n};\n\nexport const fetchTours = (tourService, dispatch) => () => {\n  dispatch(toursRequested());\n  tourService\n    .getTours()\n    .then(({ data }) => {\n      dispatch(toursLoaded(data.map(transformTour)));\n    })\n    .catch((err) => {\n      dispatch(toursError(err));\n      return Promise.reject(new Error(err));\n    });\n};\n\nexport const fetchTour = (tourService, dispatch) => (id) => {\n  return tourService\n    .getTour(id)\n    .then(({ data }) => transformTour(data))\n    .catch((err) => {\n      dispatch(toursError(err));\n      return Promise.reject(new Error(err));\n    });\n};\nconst clearNewTourInfo = () => ({ type: \"CLEAR_NEW_TOUR_INFO\" });\n\nexport const fetchNewTour = (tourService, dispatch) => (data) => {\n  tourService\n    .addTour(data)\n    .then(({ data }) => {\n      dispatch(clearNewTourInfo());\n      return data;\n    })\n    .catch((err) => {\n      return Promise.reject(new Error(err));\n    });\n};\n\nexport const fetchEditTour = (tourService, dispatch) => (id, data) => {\n  tourService.editTour(id, data);\n  // .then(dispatch(toursRequested()))\n  // .then(data=>console.log(data)\n  // )\n  // .catch((err) => console.log(err));\n};\n\nexport const setUser = (user) => {\n  return { type: \"SET_USER\", payload: user };\n};\n\nexport const logoutUser = () => {\n  return { type: \"LOGOUT_USER\" };\n};\n\nexport const fetchNewUser = (tourService, dispatch) => (data) => {\n  return tourService\n    .addUser(data)\n    .then(({ data }) => {\n      if (data.message === \"User created\") {\n        dispatch(setUser(data.user));\n        localStorage.setItem(\"token\", data.token);\n        return data.message;\n      }\n    })\n    .catch((err) => {\n      return Promise.reject(new Error(err));\n    });\n};\n\nexport const fetchLogin = (tourService, dispatch) => (data) => {\n  return tourService\n    .login(data)\n    .then(({ data }) => {\n      if (data.message === \"Auth succesful\") {\n        dispatch(setUser(data.user));\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        return data.message;\n      }\n    })\n    .catch((err) => {\n      return Promise.reject(new Error(err));\n    });\n};\n\nexport const addTourToBook = (e) => ({ type: \"ADD_TOUR_TO_BOOK\", payload: e });\n\nconst clearBookingInfo = () => ({ type: \"CLEAR_BOOKING_INFO\" });\nconst bookingsLoaded = (bookings) => {\n  return { type: \"FETCH_BOOKINGS_SUCCESS\", payload: bookings };\n};\n\nconst transformBooking = (booking) => {\n  return {\n    ...booking,\n    id: booking._id,\n    tour: booking.tour ? booking.tour.title : \"Тур отменен\",\n  };\n};\nexport const fetchBookings = (tourService, dispatch) => () => {\n  tourService\n    .getBookings()\n    .then(({ data }) => {\n      dispatch(bookingsLoaded(data.map(transformBooking)));\n    })\n\n    .catch((err) => {\n      dispatch(toursError(err));\n      return Promise.reject(new Error(err));\n    });\n};\n\nexport const fetchNewBooking = (tourService, dispatch) => (data) => {\n  tourService\n    .addBooking(data)\n    .then(() => {\n      dispatch(clearBookingInfo());\n    })\n    .catch((err) => {\n      console.log(err);\n      return Promise.reject(new Error(err));\n    });\n};\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../redux/actions\";\n\nconst menu = [\n  \"Главная\",\n  \"График туров\",\n  \"Добавить тур\",\n  \"Вход для туристических компаний\",\n  \"Регистрация\",\n  \"Выйти\",\n  \"Забронировать тур\",\n  \"Заявки\",\n];\n\nconst useStyles = makeStyles(() => ({\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nconst NavBar = ({ isLoggedin, logoutUser }) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"sticky\">\n      <Toolbar>\n        <Link to=\"/\" className={classes.link}>\n          <Button color=\"inherit\">{menu[0]}</Button>\n        </Link>\n\n        {isLoggedin ? (\n          <div>\n            <Link to=\"/bookings\" className={classes.link}>\n              <Button color=\"inherit\">{menu[7]}</Button>\n            </Link>\n            <Link to=\"/tours/new\" className={classes.link}>\n              <Button color=\"inherit\">{menu[2]}</Button>\n            </Link>\n            <Link\n              to=\"/\"\n              onClick={() => {\n                logoutUser();\n                localStorage.clear();\n              }}\n            >\n              <Button className={classes.link} color=\"inherit\">\n                {menu[5]}\n              </Button>\n            </Link>\n          </div>\n        ) : (\n          <div>\n            <Link to=\"/tours\" className={classes.link}>\n              <Button color=\"inherit\">{menu[1]}</Button>\n            </Link>\n            <Link to=\"/bookings/new\" className={classes.link}>\n              <Button color=\"inherit\">{menu[6]}</Button>\n            </Link>\n            <Link to=\"/login\" className={classes.link}>\n                <Button color=\"inherit\" size=\"small\" >{menu[3]}</Button>\n            </Link>\n          </div>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return { isLoggedin: store.isLoggedin };\n};\n\nconst mapDispatchToProps = { logoutUser };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);\n","export default __webpack_public_path__ + \"static/media/pic.99c34b9f.webp\";","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight((wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import React from \"react\";\n\nimport { TourServiceConsumer } from \"./tour-service-context\";\n\nconst withTourService = () => (Wrapped) => {\n  return (props) => {\n    return (\n      <TourServiceConsumer>\n        {(tourService) => {\n          return <Wrapped {...props} \n          tourService={tourService} />;\n        }}\n      </TourServiceConsumer>\n    );\n  };\n};\n\nexport default withTourService;\n","import React from \"react\";\n\n\nconst ErrorIndicator = () => {\n\n    return <div>Error!</div>\n}\n\nexport default ErrorIndicator;","import React from \"react\";\n\n\nconst Spinner = () => {\n  return <div>loading....</div>;\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport DateRangeIcon from \"@material-ui/icons/DateRange\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { fetchTours, addTourToBook } from \"../redux/actions\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\nimport ErrorIndicator from \"./error-indicator\";\nimport Spinner from \"./spinner\";\nimport tourService from \"../tour-service\";\n\nconst useStyles = makeStyles((theme) => ({\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\",\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n}));\n\nconst Cards = (store) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const {\n    tours,\n    fetchTours,\n    loading,\n    error,\n    isLoggedin,\n    currentUser,\n    addTourToBook,\n  } = store;\n  useEffect(() => {\n    fetchTours();\n  }, [fetchTours]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n  if (error) {\n    return <ErrorIndicator />;\n  }\n\n  const getInfo = (id) => {\n    history.push(`tours/${id}`);\n  };\n  const bookTour = (id) => {\n    addTourToBook(id);\n\n    history.push(`bookings/new`);\n  };\n  const deleteTour = async (id) => {\n    await tourService.deleteTour(id);\n    await fetchTours();\n  };\n\n  return (\n    <Container className={classes.cardGrid} maxWidth=\"md\">\n      <Grid container spacing={4}>\n        {tours.map(\n          ({ title, startDate, endDate, price, id, image, company }) => (\n            <Grid item key={title} xs={12} sm={6} md={4}>\n              <Card className={classes.card}>\n                <CardMedia\n                  className={classes.cardMedia}\n                  image={`http://localhost:5000/${image}`}\n                  title=\"Image title\"\n                />\n\n                <CardContent className={classes.cardContent}>\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {title}\n                  </Typography>\n                  <Typography>\n                    <DateRangeIcon fontSize=\"small\" color=\"primary\" />\n                    {startDate} - {endDate}\n                  </Typography>\n                  <Typography>\n                    <AttachMoneyIcon fontSize=\"small\" color=\"primary\" />\n                    {price} руб.\n                  </Typography>\n                  <Typography>\n                    Организатор {company.companyName.toUpperCase()}\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Grid container spacing={4}>\n                    <Grid item sm={5}>\n                      <Button\n                        size=\"small\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={() => {\n                          getInfo(id);\n                        }}\n                      >\n                        Подробнее\n                      </Button>\n                    </Grid>\n\n                    <Grid item sm={5}>\n                      {isLoggedin ? (\n                        company && company._id === currentUser.userId ? (\n                          <Button\n                            onClick={() => {\n                              deleteTour(id);\n                            }}\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                          >\n                            Удалить\n                          </Button>\n                        ) : null\n                      ) : (\n                        <Button\n                          size=\"small\"\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={() => {\n                            bookTour(id);\n                          }}\n                        >\n                          Забронировать\n                        </Button>\n                      )}\n                    </Grid>\n                  </Grid>\n                </CardActions>\n              </Card>\n            </Grid>\n          )\n        )}\n      </Grid>\n    </Container>\n  );\n};\n\nfunction mapStateToProps(store) {\n  return {\n    tours: store.tours,\n    loading: store.loading,\n    error: store.error,\n    isLoggedin: store.isLoggedin,\n    currentUser: store.currentUser,\n  };\n}\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchTours: fetchTours(tourService, dispatch),\n    addTourToBook: (id) => dispatch(addTourToBook(id)),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(Cards);\n","import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport img from \"../pic.webp\";\nimport Cards from \"./cards\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n    backgroundImage: `url(${img})`,\n    backgroundSize: \"cover\",\n  },\n\n  header: {\n    color: \"white\",\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  link: {\n    textDecoration: \"none\",\n    color: \"white\",\n  },\n}));\n\nconst HomePage = ({ newTour }) => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <Container maxWidth=\"sm\">\n          <Typography\n            className={classes.header}\n            component=\"h1\"\n            variant=\"h2\"\n            align=\"center\"\n            color=\"secondary\"\n            gutterBottom\n          >\n            Активный отдых Походы, сплавы, восхождения\n          </Typography>\n          <Typography\n            variant=\"h5\"\n            align=\"center\"\n            className={classes.header}\n            paragraph\n          >\n            Все туры в одном месте\n          </Typography>\n          <div className={classes.heroButtons}>\n            <Grid container spacing={2} justify=\"center\">\n              <Grid item>\n                <Link to=\"/tours\" className={classes.link}>\n                  <Button variant=\"contained\" color=\"primary\">\n                    Выбрать тур\n                  </Button>\n                </Link>\n              </Grid>\n              <Grid item>\n                {/* <Button variant=\"outlined\" color=\"primary\">\n                    Secondary action\n                  </Button> */}\n              </Grid>\n            </Grid>\n          </div>\n        </Container>\n      </div>\n      <Cards />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ image }) => {\n  return {\n    image,\n  };\n};\n\nexport default connect(mapStateToProps)(HomePage);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      © Weekend Tour {new Date().getFullYear()} <br />\n      +7 922 000 00 01 weekendtour@mail.ru\n    </Typography>\n  );\n}\n\nconst Footer = () => {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom></Typography>\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"textSecondary\"\n          component=\"p\"\n        ></Typography>\n        <Copyright />\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport Button from \"@material-ui/core/Button\";\nimport { connect } from \"react-redux\";\nimport { imageAdded } from \"../redux/actions\";\n\nexport const UploadImage = ({ imageAdded }) => {\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const fileSelectedHandler = (files) => {\n    imageAdded(files[0]);\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Button variant=\"contained\"\n        color=\"primary\" onClick={handleOpen}>Добавить фото</Button>\n      <DropzoneDialog\n        open={open}\n        onSave={fileSelectedHandler}\n        acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\n        showPreviews={true}\n        maxFileSize={5000000}\n        onClose={handleClose}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ newTour }) => {\n  return {\n    newTour,\n  };\n};\n\nconst mapDispatchToProps = {\n  imageAdded,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadImage);\n","import React from \"react\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport UploadImage from \"./upload\";\n\nimport {\n  titleAdded,\n  startDateAdded,\n  endDateAdded,\n  descriptionAdded,\n  includesAdded,\n  priceAdded,\n  companyAdded,\n  seatsAdded,\n} from \"../redux/actions\";\n\nconst AddTourForm = ({\n  titleAdded,\n  startDateAdded,\n  endDateAdded,\n  descriptionAdded,\n  priceAdded,\n  includesAdded,\n  companyAdded,\n  seatsAdded,\n  newTour,\n}) => {\n const {\n  title,\n  startDate,\n  endDate,\n  description,\n  includes,\n  price,\n  seats\n} = newTour;\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Данные тура\n      </Typography>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Маршрут\"\n            value={title}\n            fullWidth\n            onChange={(e) => {\n              titleAdded(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"startDate\"\n            name=\"startDate\"\n            label=\"Дата начала\"\n            type=\"date\"\n           \n                value={startDate}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            onChange={(e) => {\n              startDateAdded(e.target.value);\n            }}\n            fullWidth\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"endDate\"\n            name=\"endDate\"\n            label=\"Дата окончания\"\n            type=\"date\"\n            value={endDate}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            fullWidth\n            onChange={(e) => endDateAdded(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"description\"\n            name=\"description\"\n            label=\"Описание тура\"\n            value={description}\n            fullWidth\n            onChange={(e) => descriptionAdded(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"includes\"\n            name=\"includes\"\n            label=\"В стоимость включено\"\n            value={includes}\n            fullWidth\n            onChange={(e) => includesAdded(e.target.value)}\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"Стоимость\"\n            value={price}\n            fullWidth\n            onChange={(e) => priceAdded(e.target.value)}\n          />\n        </Grid>\n    \n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"seats\"\n            name=\"seats\"\n            label=\"Количество мест\"\n            value={seats}\n            fullWidth\n            onChange={(e) => seatsAdded(e.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <div>\n            <UploadImage />\n          </div>\n        </Grid>\n\n        <Grid item xs={12}></Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({ newTour }) => {\n  return {newTour};\n};\n\nconst mapDispatchToProps = {\n  titleAdded,\n  startDateAdded,\n  endDateAdded,\n  descriptionAdded,\n  priceAdded,\n  includesAdded,\n  companyAdded,\n  seatsAdded,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTourForm);\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nfunction AddTourReview({ newTour }) {\n  const classes = useStyles();\n  const {\n    title,\n    startDate,\n    endDate,\n    description,\n    price,\n    includes,\n    company,\n    seats\n  } = newTour;\n\n \n  const tour = [\n    {\n      primary: \"Маршрут\",\n      secondary: title,\n    },\n    {\n      primary: \"Дата начала\",\n      secondary: startDate,\n    },\n    {\n      primary: \"Дата окончания\",\n      secondary: endDate,\n    },\n    {\n      primary: \"Описание\",\n      secondary: description,\n    },\n    {\n      primary: \"Включено\",\n      secondary: includes,\n    },\n    {\n      primary: \"Стоимость\",\n      secondary: price,\n    },\n \n    {\n      primary: \"Количество мест\",\n      secondary: seats,\n    },\n  ]; \n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Информация о туре\n      </Typography>\n\n      <List disablePadding>\n        {tour.map((el) => {\n          return (\n            <ListItem className={classes.listItem} key={el.primary}>\n              <ListItemText primary={el.primary} secondary={el.secondary} />\n            </ListItem>\n          );\n        })}\n      </List>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({ newTour }) => {\n  return {\n    newTour,\n  };\n};\n\nexport default connect(mapStateToProps)(AddTourReview);\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport Step from \"@material-ui/core/Step\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AddTourForm from \"./add-tour-form\";\nimport AddTourReview from \"./add-tour-review\";\nimport { connect } from \"react-redux\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\nimport { fetchNewTour } from \"../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst steps = [\" Параметры тура\", \"Проверить данные\"];\n\nfunction getStepContent(step) {\n  switch (step) {\n    case 0:\n      return <AddTourForm />;\n    case 1:\n      return <AddTourReview />;\n    default:\n      throw new Error(\"Unknown step\");\n  }\n}\n\nfunction AddTour({ newTour, fetchNewTour, currentUser, fetchTours }) {\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const isNextButtonDisabled = !newTour.title || !newTour.startDate || !newTour.endDate \n    || !newTour.description || !newTour.price || !newTour.includes \n    || !newTour.seats || !newTour.image\n\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Добавить новый тур\n          </Typography>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Тур добавлен\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <div className={classes.buttons}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} className={classes.button}>\n                      Назад\n                    </Button>\n                  )}\n                  <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => {\n                      handleNext();\n                      if (activeStep === steps.length - 1) {\n                       fetchNewTour({\n                          ...newTour,\n                          company: currentUser.userId,\n                        })\n                        // .then((data) =>\n                        //   console.log(data))\n                          // .catch((err) => console.log(err))\n                       \n                      }\n                    }}\n                    className={classes.button} disabled={isNextButtonDisabled}\n                  >\n                    {activeStep === steps.length - 1 ? \"Добавить тур\" : \"Далее\"}\n                  </Button>\n                </div>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n}\n\nconst mapStateToProps = ({ newTour, currentUser }) => {\n  return { newTour, currentUser };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchNewTour: fetchNewTour(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(AddTour);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { fetchLogin } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = (store) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [user, setUser] = useState({});\n  const { fetchLogin } = store;\n  const isLoginButtonDisabled = !user.email|| !user.password; \n  const changeHandler = (event) => {\n    setUser({ ...user, [event.target.name]: event.target.value });\n  };\n\n  const redirect = () => {\n    history.push(`/`);\n  };\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Войти\n          </Typography>\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={changeHandler}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Пароль\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={changeHandler}\n                />\n              </Grid>\n              <Grid item xs={12}></Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={isLoginButtonDisabled}\n              onClick={(event) => {\n                event.preventDefault();\n                fetchLogin(user).then(() => {\n                  redirect();\n                });\n              }}\n            >\n              Войти\n            </Button>\n            <Grid container>\n              <Grid item>\n                <Link href=\"/signup\" variant=\"body2\">\n                  {\"Зарегистрироваться\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return { isLoggedin: store.isLoggedin };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchLogin: fetchLogin(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(Login);\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport { fetchTour } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Paper from \"@material-ui/core/Paper\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    padding: theme.spacing(1, 0),\n  },\n  total: {\n    fontWeight: 700,\n  },\n  title: {\n    marginTop: theme.spacing(2),\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n}));\n\nconst TourDescription = ({ fetchTour, currentUser }) => {\n  let { id } = useParams();\n  const classes = useStyles();\n  const history = useHistory();\n  const [tourInfo, setTourInfo] = useState({});\n\n  useEffect(() => {\n    fetchTour(id).then((data) => {\n      setTourInfo(data);\n    });\n  }, [fetchTour, id]);\n\n  const redirectToEditTour = (id) => {\n    history.push(`${id}/edit`);\n  };\n  const {\n    title,\n    startDate,\n    endDate,\n    description,\n    includes,\n    price,\n    company,\n    seats,\n  } = tourInfo;\n\n  const tour = [\n    {\n      primary: \"Маршрут\",\n      secondary: title,\n    },\n    {\n      primary: \"Дата начала\",\n      secondary: startDate,\n    },\n    {\n      primary: \"Дата окончания\",\n      secondary: endDate,\n    },\n    {\n      primary: \"Описание\",\n      secondary: description,\n    },\n    {\n      primary: \"Включено\",\n      secondary: includes,\n    },\n    {\n      primary: \"Стоимость\",\n      secondary: `${price} рублей`,\n    },\n    {\n      primary: \"Организатор\",\n      secondary: company ? company.companyName : null,\n    },\n    {\n      primary: \"Осталось мест\",\n      secondary: seats,\n    },\n  ];\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" gutterBottom>\n            Информация о туре\n          </Typography>\n\n          <List disablePadding>\n            {tour.map((el) => {\n              return (\n                <ListItem className={classes.listItem} key={el.primary}>\n                  <ListItemText primary={el.primary} secondary={el.secondary} />\n                </ListItem>\n              );\n            })}\n          </List>\n          {company && company._id === currentUser.userId ? (\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.button}\n              onClick={() => {\n                redirectToEditTour(id);\n              }}\n            >\n              Изменить\n            </Button>\n          ) : null}\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return store;\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchTour: fetchTour(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(TourDescription);\n","import React, { useState } from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { fetchTours } from \"../redux/actions\";\nimport { useEffect } from \"react\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./spinner\";\nimport ErrorIndicator from \"./error-indicator\";\n// import { Button } from \"@material-ui/core\";\n\nconst columns = [\n  { field: \"title\", headerName: \"Маршрут\", width: 210 },\n  { field: \"startDate\", headerName: \"Дата начала\", width: 180 },\n  { field: \"endDate\", headerName: \"Дата окончания\", width: 180 },\n  {\n    field: \"price\",\n    headerName: \"Цена\",\n    type: \"number\",\n    width: 120,\n  },\n\n  {\n    field: \"seats\",\n    headerName: \"Осталось мест\",\n    sortable: false,\n    width: 150,\n  },\n  {\n    field: \"company\",\n    headerName: \"Организатор\",\n    sortable: false,\n    width: 150,\n  },\n];\n\nconst Schedule = ({ fetchTours, tours, loading, error }) => {\n  const [transformTours, setTransformTours] = useState([]);\n  useEffect(() => {\n    fetchTours();\n\n    setTransformTours(\n      tours.map((tour) => ({\n        ...tour,\n        company: tour.company.companyName,\n      }))\n    );\n  }, [fetchTours]);\n\n  if (loading) {\n    return <Spinner />;\n  }\n  if (error) {\n    return <ErrorIndicator />;\n  }\n\n  return (\n    <div>\n      <div style={{ height: 600, width: \"100%\" }}>\n        <DataGrid\n          rows={transformTours}\n          columns={columns}\n          pageSize={5}\n          onRowClick={(e) => console.log(e.row._id)}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ tours, loading, error }) => {\n  return {\n    tours,\n    loading,\n    error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchTours: fetchTours(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(Schedule);\n","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\nimport Paper from \"@material-ui/core/Paper\";\nimport moment from \"moment\";\n\nimport { fetchEditTour, fetchTour, fetchTours } from \"../redux/actions\";\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst EditTourForm = ({ fetchEditTour, fetchTour }) => {\n  const classes = useStyles();\n  const { id } = useParams();\n  const history = useHistory();\n  const [editedTour, setEditedTour] = useState({});\n const {\n   title,\n   startDate,\n   endDate,\n   description,\n   includes,\n   price,\n   seats,\n } = editedTour;\n const isSaveButtonDisabled =\n   !title ||\n   !startDate ||\n   !endDate ||\n   !description ||\n   !price ||\n   !includes ||\n   !seats;\n\n  useEffect(() => {\n    fetchTour(id)\n      .then(\n        ({\n          title,\n          startDate,\n          endDate,\n          description,\n          includes,\n          price,\n          seats,\n          company,\n        }) => {\n          setEditedTour({\n            title: title,\n            startDate: moment(startDate, \"DD.MM.YYYY\").format(\"YYYY-MM-DD\"),\n            endDate: moment(endDate, \"DD.MM.YYYY\").format(\"YYYY-MM-DD\"),\n            description: description,\n            includes: includes,\n            price: price,\n            seats: seats,\n            company: company._id,\n          });\n        }\n      )\n      .catch((err) => {\n       redirect(id)\n      });\n  }, [fetchTour, id]);\n\n \n  const changeHandler = (e) => {\n    setEditedTour({ ...editedTour, [e.target.name]: e.target.value });\n  };\n\n  const redirect = (id) => {\n    history.push(`/tours/${id}`);\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" gutterBottom>\n            Редактировать данные\n          </Typography>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"title\"\n                label=\"Маршрут\"\n                onChange={changeHandler}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={title}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"startDate\"\n                name=\"startDate\"\n                type=\"date\"\n                label=\"Дата начала\"\n                onChange={changeHandler}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={startDate}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"endDate\"\n                name=\"endDate\"\n                type=\"date\"\n                label=\"Дата окончания\"\n                onChange={changeHandler}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={endDate}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"includes\"\n                name=\"includes\"\n                label=\"Включено в стоимость\"\n                onChange={changeHandler}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={includes}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"description\"\n                name=\"description\"\n                label=\"Описание\"\n                onChange={changeHandler}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={description}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"price\"\n                name=\"price\"\n                label=\"Цена\"\n                onChange={changeHandler}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={price}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"seats\"\n                name=\"seats\"\n                label=\"Осталось мест\"\n                onChange={changeHandler}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                value={seats}\n                fullWidth\n              />\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={() => {\n                fetchEditTour(id, editedTour);\n                redirect(id);\n              }}\n              className={classes.button}\n              disabled={isSaveButtonDisabled}\n            >\n              Сохранить\n            </Button>\n          </Grid>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return store;\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchEditTour: fetchEditTour(tourService, dispatch),\n    fetchTour: fetchTour(tourService, dispatch),\n    fetchTours: fetchTours(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(EditTourForm);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { fetchNewUser } from \"../redux/actions\";\nimport { connect } from \"react-redux\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = (store) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [newUser, setNewUser] = useState({});\n\n  const { isLoggedin, fetchNewUser } = store;\n  const isSignupButtonDisabled = !newUser.email || !newUser.password || !newUser.companyName; \n  const changeHandler = (event) => {\n    setNewUser({ ...newUser, [event.target.name]: event.target.value });\n  };\n\n  const redirect = () => {\n    history.push(`/`);\n  };\n  return (\n    <div>\n      {isLoggedin && redirect()}\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Зарегистрироваться\n          </Typography>\n\n          <form className={classes.form} noValidate>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <TextField\n                  name=\"companyName\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"companyName\"\n                  label=\"Название компании\"\n                  autoFocus\n                  onChange={changeHandler}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  onChange={changeHandler}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Пароль\"\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                  onChange={changeHandler}\n                />\n              </Grid>\n              <Grid item xs={12}></Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              disabled={isSignupButtonDisabled}\n              onClick={(e) => {\n                e.preventDefault();\n                fetchNewUser(newUser).catch((err) => {\n                  console.log(err);\n                });\n              }}\n            >\n              Зарегистрироваться\n            </Button>\n            <Grid container justify=\"flex-end\">\n              <Grid item>\n                <Link href=\"/login\" variant=\"body2\">\n                  Уже зарегистрированы? Войти\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    </div>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return { isLoggedin: store.isLoggedin };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchNewUser: fetchNewUser(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(SignUp);\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { connect } from \"react-redux\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\nimport Paper from \"@material-ui/core/Paper\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { fetchNewBooking } from \"../redux/actions\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: \"relative\",\n  },\n  layout: {\n    width: \"auto\",\n    marginLeft: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: \"auto\",\n      marginRight: \"auto\",\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: \"flex\",\n    justifyContent: \"flex-end\",\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  tourInfo: {\n    fontSize: \"10px\",\n    padding: theme.spacing(0),\n  },\n  notice: {\n    fontSize: \"10px\",\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst BookTourForm = (store) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { fetchNewBooking, newBooking, tours } = store;\n\n  const [booking, setBooking] = useState({ tour: newBooking.tour });\n  const tour = tours.find((tour) => tour.id === newBooking.tour);\n  const [selectedTour, setSelectedTour] = useState(tour);\n  const { firstName, lastName, seats, phone, email } = booking;\n  const isBookButtonDisabled =\n    !firstName || !lastName || !seats || !phone || !email;\n\n  const onChangeTour = (event) => {\n    const changedTour = tours.find((tour) => tour.title === event.target.value);\n    setBooking({ ...booking, [event.target.name]: changedTour.id });\n    setSelectedTour(changedTour);\n  };\n\n  const changeHandler = (event) => {\n    setBooking({ ...booking, [event.target.name]: event.target.value });\n  };\n\n  let tourInfo = [];\n  const tourInfoGet = () => {\n    if (selectedTour) {\n      const {\n        title,\n        startDate,\n        endDate,\n        includes,\n        price,\n        company,\n        seats,\n      } = selectedTour;\n      return (tourInfo = [\n        {\n          primary: \"Маршрут\",\n          secondary: title,\n        },\n        {\n          primary: \"Даты поездки\",\n          secondary: `${startDate} - ${endDate}`,\n        },\n\n        {\n          primary: \"Включено\",\n          secondary: includes,\n        },\n        {\n          primary: \"Стоимость\",\n          secondary: `${price} руб./чел.`,\n        },\n        {\n          primary: \"Организатор\",\n          secondary: company ? company.companyName : null,\n        },\n        { primary: \"Осталось мест\", secondary: seats },\n      ]);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Typography variant=\"h6\" gutterBottom>\n            Параметры бронирования\n          </Typography>\n          {selectedTour && tourInfoGet() ? (\n            <List className={classes.tourInfo} disablePadding>\n              {tourInfo.map((el) => {\n                return (\n                  <ListItem\n                    className={classes.tourInfo}\n                    key={`${el.primary}${el.secondary}`}\n                  >\n                    <ListItemText\n                      primary={el.primary}\n                      secondary={el.secondary}\n                    />\n                  </ListItem>\n                );\n              })}\n            </List>\n          ) : (\n            <div></div>\n          )}\n\n          <Typography variant=\"h6\" gutterBottom>\n            Внести данные\n          </Typography>\n\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                id=\"select\"\n                label={selectedTour ? \"Изменить тур\" : \"Выбрать тур\"}\n                defaultValue=\"\"\n                select\n                name=\"tour\"\n                fullWidth\n                onChange={(e) => onChangeTour(e)}\n              >\n                {tours.map((tour) => (\n                  <MenuItem key={`selected${tour.title}`} value={tour.title}>\n                    {tour.title}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                id={\"firstName\"}\n                name={\"firstName\"}\n                label={\"Имя\"}\n                onChange={changeHandler}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id={\"lastName\"}\n                name={\"lastName\"}\n                label={\"Фамилия\"}\n                onChange={changeHandler}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id={\"email\"}\n                name={\"email\"}\n                label={\"Email\"}\n                onChange={changeHandler}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id={\"phone\"}\n                name={\"phone\"}\n                label={\"Телефон\"}\n                onChange={changeHandler}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                // id={\"seats\"}\n                name={\"seats\"}\n                id=\"select\"\n                label={\"Выбрать количество мест\"}\n                defaultValue=\"\"\n                select\n                fullWidth\n                onChange={changeHandler}\n              >\n                {[1, 2, 3, 4, 5, 6, 7, 8]\n                  .filter((el) => el <= selectedTour.seats)\n                  .map((el) => (\n                    <MenuItem key={`seats${el}`} value={el}>\n                      {el}\n                    </MenuItem>\n                  ))}\n              </TextField>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={isBookButtonDisabled}\n              onClick={() => {\n                fetchNewBooking(booking);\n                history.push(\"/\");\n              }}\n              className={classes.button}\n            >\n              Забронировать\n            </Button>\n\n          </Grid>\n            <Typography className={classes.notice}>Стоимость, указанная на сайте не действительна для групп более 10 человек. По всем групповым заявкам просим присылать запросы на mice@weekend.ru</Typography>\n        </Paper>\n      </main>\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  return store;\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchNewBooking: fetchNewBooking(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookTourForm);\n","import React from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport { fetchBookings } from \"../redux/actions\";\nimport { useEffect } from \"react\";\nimport compose from \"../utils/compose\";\nimport withTourService from \"../with-tour-service\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./spinner\";\nimport ErrorIndicator from \"./error-indicator\";\n\nconst columns = [\n  { field: \"firstName\", headerName: \"Имя\", width: 210 },\n  { field: \"lastName\", headerName: \"Фамилия\", width: 210 },\n  { field: \"tour\", headerName: \"Тур\", width: 350 },\n  { field: \"seats\", headerName: \"Количество мест\", type: \"number\", width: 150 },\n  { field: \"email\", headerName: \"email\", sortable: false, width: 200 },\n  { field: \"phone\", headerName: \"Телефон\", sortable: false, width: 200 },\n];\n\nconst Bookings = ({ fetchBookings, bookings, loading, error }) => {\n  useEffect(() => {\n    fetchBookings();\n  }, [fetchBookings]);\n \n  if (loading) {\n    return <Spinner />;\n  }\n  if (error) {\n    return <ErrorIndicator />;\n  }\n\n  return (\n    <div style={{ height: 600, width: \"100%\" }}>\n      <DataGrid rows={bookings} columns={columns} pageSize={10} />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ bookings, loading, error }) => {\n  return {\n    bookings,\n    loading,\n    error,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  const { tourService } = ownProps;\n  return {\n    fetchBookings: fetchBookings(tourService, dispatch),\n  };\n};\n\nexport default compose(\n  withTourService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(Bookings);\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport NavBar from \"./navbar\";\nimport HomePage from \"./homepage\";\nimport Footer from \"./footer\";\nimport AddTour from \"./add-tour-main\";\nimport Login from \"./login\";\nimport TourDescription from \"./tour-description\";\nimport Schedule from \"./schedule\";\nimport EditTourForm from \"./edit-tour-form\";\nimport SignUp from \"./signup\";\nimport BookTourForm from \"./book-tour-form\";\nimport Bookings from \"./bookings\";\n\nexport default function App() {\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <NavBar />\n      <main>\n        <Switch>\n          <Route path=\"/\" exact>\n            <HomePage />\n          </Route>\n          <Route path=\"/tours\" exact>\n            <Schedule />\n          </Route>\n          <Route path=\"/tours/new\">\n            <AddTour />\n          </Route>\n          <Route path=\"/tours/:id\" exact>\n            <TourDescription />\n          </Route>\n          <Route path=\"/tours/:id/edit\">\n            <EditTourForm />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/signup\">\n            <SignUp />\n          </Route>\n          <Route path=\"/bookings/new\">\n            <BookTourForm />\n          </Route>\n          <Route path=\"/bookings\">\n            <Bookings />\n          </Route>\n        </Switch>\n      </main>\n      <Footer />\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport ErrorIndicator from \"./error-indicator\";\n\nexport default class ErrorBoundry extends React.Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}\n","let initialState = {\n  tours: [],\n  loading: true,\n  error: null,\n  isLoggedin: false,\n  currentUser: null,\n  newTour: {\n    id: null,\n    title: null,\n    startDate: null,\n    endDate: null,\n    description: null,\n    price: null,\n    includes: null,\n    company: null,\n    image: null,\n    seats: null,\n  },\n  newBooking: {\n    tour: null,\n  },\n  bookings: [],\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"FETCH_TOURS_REQUEST\":\n      return {\n        ...state,\n        tours: [],\n        loading: true,\n        error: null,\n      };\n\n    case \"FETCH_TOURS_SUCCESS\":\n      return {\n        ...state,\n        tours: action.payload,\n        loading: false,\n        error: null,\n      };\n\n    case \"FETCH_TOURS_FAILURE\":\n      return {\n        ...state,\n        tours: [],\n        loading: false,\n        error: action.payload,\n      };\n    case \"ADD_TITLE\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, title: action.payload },\n       \n      };\n    case \"ADD_START_DATE\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, startDate: action.payload },\n      };\n    case \"ADD_END_DATE\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, endDate: action.payload },\n      };\n    case \"ADD_DESCRIPTION\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, description: action.payload },\n      };\n    case \"ADD_PRICE\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, price: action.payload },\n      };\n    case \"ADD_INCLUDES\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, includes: action.payload },\n      };\n    case \"ADD_COMPANY\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, company: action.payload },\n      };\n    case \"ADD_IMAGE\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, image: action.payload },\n      };\n    case \"ADD_SEATS\":\n      return {\n        ...state,\n        newTour: { ...state.newTour, seats: action.payload },\n      };\n\n    case \"SET_USER\":\n      return {\n        ...state,\n        isLoggedin: true,\n        currentUser: action.payload\n      };\n\n    case \"LOGOUT_USER\":\n      return {\n        ...state,\n        isLoggedin: false,\n        currentUser: {},\n        newTour: {}\n      };\n    case \"ADD_TOUR_TO_BOOK\":\n      return {\n        ...state,\n        newBooking: { ...state.newBooking, tour: action.payload },\n      };\n    case \"CLEAR_BOOKING_INFO\":\n      return {\n        ...state,\n        newBooking: {}\n      };\n    case \"CLEAR_NEW_TOUR_INFO\":\n      return {\n        ...state,\n        newTour: {}\n      };\n\n    case \"FETCH_BOOKINGS_SUCCESS\":\n      return {\n        ...state,\n        bookings: action.payload,\n        loading: false,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport reducer from \"./redux/reducer\";\nimport thunk from \"redux-thunk\";\nimport { loadState, saveState } from \"./localStorage.js\";\n\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst middleware = composeEnhancer(applyMiddleware(thunk));\nconst persistedState = loadState();\nconst store = createStore(reducer, persistedState, middleware);\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nexport default store;\n","export const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(\"state\");\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try {\n    localStorage.setItem(\"state\", JSON.stringify({...state}));\n  } catch (e) {\n    console.log(\"error\", e);\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport tourService from \"./tour-service\";\nimport { TourServiceProvider } from \"./tour-service-context\";\nimport App from \"./components/App\";\nimport ErrorBoundry from \"./components/error-boundry\";\nimport store from \"./store\";\nimport { ToastContainer } from \"react-toastify\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <Provider store={store}>\n    <ErrorBoundry>\n      <TourServiceProvider value={tourService}>\n        <Router>\n          <ToastContainer />\n          <App />\n        </Router>\n      </TourServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  /* </React.StrictMode> */\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}